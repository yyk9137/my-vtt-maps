{"version":3,"file":"index.js","mappings":"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","sources":["src://tavern_helper_template/node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.2_96d39c74a8c06e57a334244d199e36ff/node_modules/vue-loader/dist/exportHelper.js","src://tavern_helper_template/webpack/bootstrap","src://tavern_helper_template/webpack/runtime/compat get default export","src://tavern_helper_template/webpack/runtime/define property getters","src://tavern_helper_template/webpack/runtime/hasOwnProperty shorthand","src://tavern_helper_template/external var \"Vue\"","src://tavern_helper_template/external var \"PIXI\"","src://tavern_helper_template/src/VTT地图查看器/utils/QuadTree.ts","webpack://tavern_helper_template/./src/VTT地图查看器/components/MapCanvas-V4.vue?772e","src://tavern_helper_template/src/VTT地图查看器/composables/useFOV.ts","webpack://tavern_helper_template/src/VTT地图查看器/components/MapCanvas-V4.vue?892f","src://tavern_helper_template/external var \"_\"","src://tavern_helper_template/external var \"z\"","src://tavern_helper_template/src/VTT地图查看器/types.ts","src://tavern_helper_template/src/VTT地图查看器/composables/useMapState.ts","webpack://tavern_helper_template/./src/VTT地图查看器/App.vue?b631","webpack://tavern_helper_template/src/VTT地图查看器/App.vue?63ea","src://tavern_helper_template/src/VTT地图查看器/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = Vue;","const __WEBPACK_NAMESPACE_OBJECT__ = PIXI;","/**\n * 四叉树空间分区数据结构\n * 用于快速查询空间内的墙壁,大幅提升碰撞检测性能\n *\n * 性能提升: O(n) → O(log n)\n * 实际效果: 检测 500 道墙 → 只检测 5-10 道墙\n */\n\nimport type { Wall } from '../types';\n\n/**\n * 矩形边界\n */\nexport interface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n/**\n * 四叉树节点\n */\nexport class QuadTree {\n  private bounds: Rectangle;\n  private capacity: number;\n  private walls: Wall[] = [];\n  private divided = false;\n  private northeast?: QuadTree;\n  private northwest?: QuadTree;\n  private southeast?: QuadTree;\n  private southwest?: QuadTree;\n\n  constructor(bounds: Rectangle, capacity = 10) {\n    this.bounds = bounds;\n    this.capacity = capacity;\n  }\n\n  /**\n   * 插入墙壁到四叉树\n   */\n  insert(wall: Wall): boolean {\n    // 如果墙壁不在这个区域内,直接返回\n    if (!this.intersects(wall)) {\n      return false;\n    }\n\n    // 如果当前节点还有空间,直接插入\n    if (this.walls.length < this.capacity) {\n      this.walls.push(wall);\n      return true;\n    }\n\n    // 如果已满,需要分割\n    if (!this.divided) {\n      this.subdivide();\n    }\n\n    // 🔧 修复: 墙壁可能跨越多个子节点,需要插入到**所有**相交的子节点!\n    // 不能在第一次成功插入后就返回!\n    let inserted = false;\n    if (this.northeast!.insert(wall)) inserted = true;\n    if (this.northwest!.insert(wall)) inserted = true;\n    if (this.southeast!.insert(wall)) inserted = true;\n    if (this.southwest!.insert(wall)) inserted = true;\n\n    // 如果成功插入到至少一个子节点,返回true\n    if (inserted) return true;\n\n    // 如果子节点都无法插入,插入到当前节点\n    this.walls.push(wall);\n    return true;\n  }\n\n  /**\n   * 查询指定区域内的所有墙壁\n   */\n  query(range: Rectangle, found: Wall[] = [], depth: number = 0): Wall[] {\n    // 🔍 调试: 记录查询过程\n    const debugPrefix = '  '.repeat(depth);\n\n    // 如果区域不相交,直接返回\n    if (!this.boundsIntersect(this.bounds, range)) {\n      if (depth === 0) {\n        console.log(`${debugPrefix}❌ 查询范围与四叉树根节点不相交!`);\n        console.log(\n          `${debugPrefix}  四叉树边界: [${this.bounds.x}, ${this.bounds.y}, ${this.bounds.width}, ${this.bounds.height}]`,\n        );\n        console.log(`${debugPrefix}  查询范围: [${range.x}, ${range.y}, ${range.width}, ${range.height}]`);\n      }\n      return found;\n    }\n\n    // 检查当前节点的墙壁\n    for (const wall of this.walls) {\n      if (this.wallIntersectsRange(wall, range)) {\n        found.push(wall);\n      }\n    }\n\n    // 如果已分割,递归查询子节点\n    if (this.divided) {\n      this.northeast!.query(range, found, depth + 1);\n      this.northwest!.query(range, found, depth + 1);\n      this.southeast!.query(range, found, depth + 1);\n      this.southwest!.query(range, found, depth + 1);\n    }\n\n    return found;\n  }\n\n  /**\n   * 分割节点为4个子节点\n   */\n  private subdivide(): void {\n    const { x, y, width, height } = this.bounds;\n    const w = width / 2;\n    const h = height / 2;\n\n    this.northeast = new QuadTree({ x: x + w, y, width: w, height: h }, this.capacity);\n    this.northwest = new QuadTree({ x, y, width: w, height: h }, this.capacity);\n    this.southeast = new QuadTree({ x: x + w, y: y + h, width: w, height: h }, this.capacity);\n    this.southwest = new QuadTree({ x, y: y + h, width: w, height: h }, this.capacity);\n\n    this.divided = true;\n  }\n\n  /**\n   * 检查墙壁是否与节点边界相交\n   */\n  private intersects(wall: Wall): boolean {\n    const [x1, y1, x2, y2] = wall.c;\n    const { x, y, width, height } = this.bounds;\n\n    // 墙壁的边界框\n    const wallMinX = Math.min(x1, x2);\n    const wallMaxX = Math.max(x1, x2);\n    const wallMinY = Math.min(y1, y2);\n    const wallMaxY = Math.max(y1, y2);\n\n    // AABB 相交检测\n    return !(wallMaxX < x || wallMinX > x + width || wallMaxY < y || wallMinY > y + height);\n  }\n\n  /**\n   * 检查两个矩形是否相交\n   */\n  private boundsIntersect(a: Rectangle, b: Rectangle): boolean {\n    return !(a.x + a.width < b.x || a.x > b.x + b.width || a.y + a.height < b.y || a.y > b.y + b.height);\n  }\n\n  /**\n   * 检查墙壁是否与查询范围相交\n   */\n  private wallIntersectsRange(wall: Wall, range: Rectangle): boolean {\n    const [x1, y1, x2, y2] = wall.c;\n\n    const wallMinX = Math.min(x1, x2);\n    const wallMaxX = Math.max(x1, x2);\n    const wallMinY = Math.min(y1, y2);\n    const wallMaxY = Math.max(y1, y2);\n\n    return !(\n      wallMaxX < range.x ||\n      wallMinX > range.x + range.width ||\n      wallMaxY < range.y ||\n      wallMinY > range.y + range.height\n    );\n  }\n\n  /**\n   * 清空四叉树\n   */\n  clear(): void {\n    this.walls = [];\n    this.divided = false;\n    this.northeast = undefined;\n    this.northwest = undefined;\n    this.southeast = undefined;\n    this.southwest = undefined;\n  }\n\n  /**\n   * 获取四叉树统计信息 (用于调试)\n   */\n  getStats(): { nodes: number; walls: number; maxDepth: number } {\n    let nodes = 1;\n    let walls = this.walls.length;\n    let maxDepth = 1;\n\n    if (this.divided) {\n      const neStats = this.northeast!.getStats();\n      const nwStats = this.northwest!.getStats();\n      const seStats = this.southeast!.getStats();\n      const swStats = this.southwest!.getStats();\n\n      nodes += neStats.nodes + nwStats.nodes + seStats.nodes + swStats.nodes;\n      walls += neStats.walls + nwStats.walls + seStats.walls + swStats.walls;\n      maxDepth = Math.max(neStats.maxDepth, nwStats.maxDepth, seStats.maxDepth, swStats.maxDepth) + 1;\n    }\n\n    return { nodes, walls, maxDepth };\n  }\n}\n\n/**\n * AABB (Axis-Aligned Bounding Box) 快速相交检测\n */\nexport function aabbIntersect(x1: number, y1: number, x2: number, y2: number, wall: Wall): boolean {\n  const [wx1, wy1, wx2, wy2] = wall.c;\n\n  const moveMinX = Math.min(x1, x2);\n  const moveMaxX = Math.max(x1, x2);\n  const moveMinY = Math.min(y1, y2);\n  const moveMaxY = Math.max(y1, y2);\n\n  const wallMinX = Math.min(wx1, wx2);\n  const wallMaxX = Math.max(wx1, wx2);\n  const wallMinY = Math.min(wy1, wy2);\n  const wallMaxY = Math.max(wy1, wy2);\n\n  // AABB 相交检测 (只有4次比较,非常快)\n  return !(moveMaxX < wallMinX || moveMinX > wallMaxX || moveMaxY < wallMinY || moveMinY > wallMaxY);\n}\n","import { defineComponent as _defineComponent } from 'vue';\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = { class: \"map-controls\" };\nconst _hoisted_2 = {\n    key: 0,\n    class: \"door-panel\"\n};\nconst _hoisted_3 = { class: \"panel-header\" };\nconst _hoisted_4 = { class: \"panel-content\" };\nconst _hoisted_5 = { class: \"door-info\" };\nconst _hoisted_6 = { class: \"door-name\" };\nconst _hoisted_7 = { class: \"door-position\" };\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n    key: 1,\n    class: \"token-info\"\n};\nimport { gsap } from 'gsap';\nimport * as PIXI from 'pixi.js';\nimport { computed, onMounted, onUnmounted, ref, watch } from 'vue';\nimport { useFOV } from '../composables/useFOV';\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'MapCanvas-V4',\n    props: {\n        mapData: {},\n        tokens: {}\n    },\n    emits: [\"tokenMove\", \"tokenSelect\"],\n    setup(__props, { emit: __emit }) {\n        const props = __props;\n        const emit = __emit;\n        const containerRef = ref();\n        const canvasRef = ref();\n        const showGrid = ref(true);\n        const fogEnabled = ref(props.mapData.fogOfWar.enabled);\n        const lightingEnabled = ref(!props.mapData.globalLight);\n        const foregroundVisible = ref(true);\n        const selectedToken = ref(null);\n        // 🆕 门控制面板状态\n        const showDoorPanel = ref(false);\n        // 🆕 计算所有门的列表\n        const doors = computed(() => {\n            return props.mapData.walls.filter(wall => wall.door === 1);\n        });\n        let app = null;\n        let backgroundSprite = null;\n        let foregroundSprite = null;\n        let gridGraphics = null;\n        let wallsGraphics = null;\n        let lightsContainer = null;\n        let tokensContainer = null;\n        let fogLayer = null;\n        let isAnyTokenDragging = false;\n        let isSpaceKeyPressed = false;\n        const visionPolygonCache = new Map();\n        let fogCanvas = null;\n        let fogSprite = null;\n        let fogTexture = null;\n        let fogNeedsUpdate = true;\n        const viewport = ref({\n            x: 0,\n            y: 0,\n            scale: 1,\n        });\n        const { isLineBlocked, isMovementBlocked, isTokenOnWall, calculateFOVShadowCasting, getKeyAngles, buildQuadTree, castRay: castRayFromFOV, shouldBlockVision, } = useFOV();\n        const mapBounds = computed(() => ({\n            x: 0,\n            y: 0,\n            width: props.mapData.width,\n            height: props.mapData.height,\n        }));\n        onMounted(async () => {\n            if (!containerRef.value || !canvasRef.value)\n                return;\n            app = new PIXI.Application();\n            await app.init({\n                canvas: canvasRef.value,\n                width: containerRef.value.clientWidth,\n                height: containerRef.value.clientHeight,\n                backgroundColor: props.mapData.backgroundColor || '#1a1a1a',\n                antialias: true,\n            });\n            const backgroundLayer = new PIXI.Container();\n            const gridLayer = new PIXI.Container();\n            const wallsLayer = new PIXI.Container();\n            lightsContainer = new PIXI.Container();\n            tokensContainer = new PIXI.Container();\n            const foregroundLayer = new PIXI.Container();\n            fogLayer = new PIXI.Container();\n            foregroundLayer.eventMode = 'none';\n            fogLayer.eventMode = 'none';\n            app.stage.addChild(backgroundLayer);\n            app.stage.addChild(gridLayer);\n            app.stage.addChild(wallsLayer);\n            app.stage.addChild(lightsContainer);\n            app.stage.addChild(tokensContainer);\n            app.stage.addChild(foregroundLayer);\n            app.stage.addChild(fogLayer);\n            if (props.mapData.img) {\n                const texture = await PIXI.Assets.load(props.mapData.img);\n                backgroundSprite = new PIXI.Sprite(texture);\n                backgroundSprite.width = props.mapData.width;\n                backgroundSprite.height = props.mapData.height;\n                backgroundLayer.addChild(backgroundSprite);\n            }\n            if (props.mapData.foreground) {\n                const texture = await PIXI.Assets.load(props.mapData.foreground);\n                foregroundSprite = new PIXI.Sprite(texture);\n                foregroundSprite.width = props.mapData.width;\n                foregroundSprite.height = props.mapData.height;\n                foregroundLayer.addChild(foregroundSprite);\n                toastr.info('已加载前景层 (遮挡物)');\n            }\n            gridGraphics = new PIXI.Graphics();\n            gridLayer.addChild(gridGraphics);\n            drawGrid();\n            wallsGraphics = new PIXI.Graphics();\n            wallsLayer.addChild(wallsGraphics);\n            drawWalls();\n            console.log('🌳 正在构建四叉树空间分区...');\n            buildQuadTree(props.mapData.walls, mapBounds.value);\n            console.log('✅ 四叉树构建完成,碰撞检测性能已优化!');\n            drawLights();\n            drawTokens();\n            fogCanvas = document.createElement('canvas');\n            fogCanvas.width = props.mapData.width;\n            fogCanvas.height = props.mapData.height;\n            if (fogEnabled.value) {\n                fogNeedsUpdate = true;\n                updateFog();\n            }\n            setupInteraction();\n            autoFitMap();\n            const resizeObserver = new ResizeObserver(() => {\n                if (app && containerRef.value) {\n                    app.renderer.resize(containerRef.value.clientWidth, containerRef.value.clientHeight);\n                }\n            });\n            resizeObserver.observe(containerRef.value);\n            onUnmounted(() => {\n                resizeObserver.disconnect();\n            });\n        });\n        function drawGrid() {\n            if (!gridGraphics)\n                return;\n            gridGraphics.clear();\n            if (!showGrid.value)\n                return;\n            const { width, height, grid, gridColor, gridAlpha } = props.mapData;\n            gridGraphics.lineStyle(1, parseInt(gridColor.replace('#', '0x')), gridAlpha);\n            for (let x = 0; x <= width; x += grid) {\n                gridGraphics.moveTo(x, 0);\n                gridGraphics.lineTo(x, height);\n            }\n            for (let y = 0; y <= height; y += grid) {\n                gridGraphics.moveTo(0, y);\n                gridGraphics.lineTo(width, y);\n            }\n            gridGraphics.stroke();\n        }\n        // 🔧 修改：根据门的状态显示不同颜色\n        function drawWalls() {\n            if (!wallsGraphics)\n                return;\n            wallsGraphics.clear();\n            console.log(`🧱 绘制 ${props.mapData.walls.length} 道墙壁`);\n            let doorCount = 0;\n            let windowCount = 0;\n            let normalCount = 0;\n            for (const wall of props.mapData.walls) {\n                const [x1, y1, x2, y2] = wall.c;\n                let color = 0xffffff;\n                let alpha = 1.0;\n                let width = 10;\n                if (wall.door === 1) {\n                    // 🆕 门 - 根据开关状态显示不同颜色\n                    if (wall.ds === 1) {\n                        // 开门 - 浅棕色，细线，半透明\n                        color = 0xd2b48c;\n                        width = 8;\n                        alpha = 0.6;\n                    }\n                    else {\n                        // 关门 - 深棕色，粗线，不透明\n                        color = 0x8b4513;\n                        width = 15;\n                        alpha = 1.0;\n                    }\n                    doorCount++;\n                }\n                else if (wall.door === 2) {\n                    color = 0x9370db;\n                    alpha = 0.8;\n                    width = 10;\n                }\n                else if (wall.sense === 0) {\n                    color = 0x4169e1;\n                    alpha = 0.7;\n                    width = 8;\n                    windowCount++;\n                }\n                else {\n                    normalCount++;\n                }\n                wallsGraphics.lineStyle(width, color, alpha);\n                wallsGraphics.moveTo(x1, y1);\n                wallsGraphics.lineTo(x2, y2);\n                wallsGraphics.stroke();\n            }\n            console.log(`  - 普通墙: ${normalCount} 道（白色）`);\n            console.log(`  - 门: ${doorCount} 道（棕色）`);\n            console.log(`  - 窗户: ${windowCount} 道（蓝色）`);\n        }\n        function drawLights() {\n            if (!lightsContainer)\n                return;\n            lightsContainer.removeChildren();\n            if (!lightingEnabled.value) {\n                console.log('💡 光照系统已关闭');\n                return;\n            }\n            console.log(`💡 绘制 ${props.mapData.lights.length} 个光源`);\n            for (const light of props.mapData.lights) {\n                const lightGraphics = new PIXI.Graphics();\n                const dimRadius = light.dim * props.mapData.grid;\n                const brightRadius = light.bright * props.mapData.grid;\n                const color = parseInt(light.tintColor.replace('#', '0x'));\n                if (dimRadius > 0) {\n                    lightGraphics.circle(light.x, light.y, dimRadius);\n                    lightGraphics.fill({ color, alpha: light.tintAlpha * 0.4 });\n                }\n                if (brightRadius > 0) {\n                    lightGraphics.circle(light.x, light.y, brightRadius);\n                    lightGraphics.fill({ color, alpha: light.tintAlpha * 0.8 });\n                }\n                lightGraphics.circle(light.x, light.y, 30);\n                lightGraphics.fill({ color: 0xffff00, alpha: 1.0 });\n                lightGraphics.circle(light.x, light.y, 50);\n                lightGraphics.stroke({ width: 5, color: 0xffffff, alpha: 0.8 });\n                lightsContainer.addChild(lightGraphics);\n                gsap.to(lightGraphics, {\n                    alpha: 0.8,\n                    duration: 1 + Math.random(),\n                    repeat: -1,\n                    yoyo: true,\n                    ease: 'power1.inOut',\n                });\n            }\n            console.log(`  - 第一个光源位置: (${props.mapData.lights[0].x}, ${props.mapData.lights[0].y})`);\n            console.log(`  - tintAlpha: ${props.mapData.lights[0].tintAlpha}`);\n        }\n        function drawTokens() {\n            if (!tokensContainer)\n                return;\n            tokensContainer.removeChildren();\n            const tokens = props.tokens || props.mapData.tokens || [];\n            console.log(`🎮 绘制 ${tokens.length} 个 Token`);\n            for (const token of tokens) {\n                const tokenGraphics = new PIXI.Graphics();\n                const size = token.width * props.mapData.grid;\n                const x = token.x;\n                const y = token.y;\n                tokenGraphics.circle(x, y, size / 2);\n                tokenGraphics.fill({ color: 0x00ff00, alpha: 0.8 });\n                tokenGraphics.stroke({ width: 8, color: 0xffffff });\n                tokenGraphics.circle(x, y, size / 2 + 15);\n                tokenGraphics.stroke({ width: 4, color: 0xffff00, alpha: 0.8 });\n                const text = new PIXI.Text({\n                    text: token.name,\n                    style: {\n                        fontSize: 32,\n                        fill: 0xffffff,\n                        stroke: { color: 0x000000, width: 4 },\n                        fontWeight: 'bold',\n                    },\n                });\n                text.anchor.set(0.5);\n                text.x = x;\n                text.y = y + size / 2 + 40;\n                tokenGraphics.addChild(text);\n                console.log(`  - Token \"${token.name}\" 位置: (${x}, ${y}), 大小: ${size}px`);\n                tokenGraphics.eventMode = 'dynamic';\n                tokenGraphics.cursor = 'pointer';\n                tokenGraphics.hitArea = new PIXI.Circle(x, y, size / 2 + 20);\n                let dragging = false;\n                let dragStartPos = null;\n                let lastValidPos = { x, y };\n                tokenGraphics.on('pointerdown', event => {\n                    event.stopPropagation();\n                    dragging = true;\n                    isAnyTokenDragging = true;\n                    const globalPos = event.global;\n                    const localPos = app.stage.toLocal(globalPos);\n                    dragStartPos = { x: localPos.x, y: localPos.y };\n                    lastValidPos = { x: token.x, y: token.y };\n                    selectedToken.value = token;\n                    emit('tokenSelect', token);\n                    tokenGraphics.cursor = 'grabbing';\n                });\n                tokenGraphics.on('pointerup', event => {\n                    if (dragging) {\n                        event.stopPropagation();\n                        console.log(`🖱️ 停止拖动: ${token.name}`);\n                        tokenGraphics.cursor = 'grab';\n                        emit('tokenMove', token, token.x, token.y);\n                        if (fogEnabled.value) {\n                            fogNeedsUpdate = true;\n                            updateFog();\n                        }\n                    }\n                    dragging = false;\n                    isAnyTokenDragging = false;\n                    dragStartPos = null;\n                });\n                tokenGraphics.on('pointermove', event => {\n                    if (dragging && dragStartPos) {\n                        event.stopPropagation();\n                        const globalPos = event.global;\n                        const localPos = app.stage.toLocal(globalPos);\n                        const deltaX = localPos.x - dragStartPos.x;\n                        const deltaY = localPos.y - dragStartPos.y;\n                        const newX = lastValidPos.x + deltaX;\n                        const newY = lastValidPos.y + deltaY;\n                        const tokenRadius = (token.width * props.mapData.grid) / 2;\n                        const canMove = !isMovementBlocked(token.x, token.y, newX, newY, props.mapData.walls, tokenRadius, mapBounds.value);\n                        if (!canMove) {\n                            return;\n                        }\n                        tokenGraphics.x = newX - x;\n                        tokenGraphics.y = newY - y;\n                        token.x = newX;\n                        token.y = newY;\n                    }\n                });\n                tokenGraphics.on('pointerover', () => {\n                    if (!dragging) {\n                        tokenGraphics.cursor = 'grab';\n                    }\n                });\n                tokenGraphics.on('pointerout', () => {\n                    if (!dragging) {\n                        tokenGraphics.cursor = 'pointer';\n                    }\n                });\n                tokensContainer.addChild(tokenGraphics);\n            }\n        }\n        function updateFog() {\n            if (!fogCanvas || !fogLayer)\n                return;\n            if (!fogNeedsUpdate) {\n                console.log(`👁️ 战争迷雾无需更新（使用缓存）`);\n                return;\n            }\n            const startTime = performance.now();\n            if (!fogEnabled.value) {\n                if (fogSprite && fogLayer.children.includes(fogSprite)) {\n                    fogLayer.removeChild(fogSprite);\n                    fogSprite.destroy();\n                    fogSprite = null;\n                }\n                fogNeedsUpdate = false;\n                return;\n            }\n            const tokens = props.tokens || props.mapData.tokens || [];\n            const ctx = fogCanvas.getContext('2d');\n            if (!ctx)\n                return;\n            ctx.clearRect(0, 0, fogCanvas.width, fogCanvas.height);\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n            ctx.fillRect(0, 0, fogCanvas.width, fogCanvas.height);\n            ctx.globalCompositeOperation = 'destination-out';\n            for (const token of tokens) {\n                if (token.vision <= 0)\n                    continue;\n                const visionPolygon = createVisionPolygon(token);\n                if (visionPolygon.length > 0) {\n                    console.log(`🔍 Token \"${token.name}\" 位置: (${Math.floor(token.x)}, ${Math.floor(token.y)})`);\n                    console.log(`  视野多边形顶点数: ${visionPolygon.length / 2}`);\n                    ctx.beginPath();\n                    ctx.moveTo(visionPolygon[0], visionPolygon[1]);\n                    for (let i = 2; i < visionPolygon.length; i += 2) {\n                        ctx.lineTo(visionPolygon[i], visionPolygon[i + 1]);\n                    }\n                    ctx.closePath();\n                    ctx.fillStyle = 'rgba(255, 255, 255, 1)';\n                    ctx.fill();\n                }\n            }\n            ctx.globalCompositeOperation = 'source-over';\n            if (fogSprite && fogLayer.children.includes(fogSprite)) {\n                fogLayer.removeChild(fogSprite);\n                fogSprite.destroy();\n                fogSprite = null;\n            }\n            if (fogTexture) {\n                fogTexture.destroy(true);\n                fogTexture = null;\n            }\n            fogTexture = PIXI.Texture.from(fogCanvas);\n            fogSprite = new PIXI.Sprite(fogTexture);\n            fogLayer.addChild(fogSprite);\n            const endTime = performance.now();\n            console.log(`👁️ 更新战争迷雾完成，耗时: ${(endTime - startTime).toFixed(2)}ms`);\n            fogNeedsUpdate = false;\n        }\n        function createVisionPolygon(token) {\n            const visionRange = token.vision * props.mapData.grid;\n            if (visionRange <= 0)\n                return [];\n            const gridX = Math.round(token.x / 10) * 10;\n            const gridY = Math.round(token.y / 10) * 10;\n            const cacheKey = `${token.id}-${gridX}-${gridY}`;\n            const keyAngles = getKeyAngles(token.x, token.y, visionRange, props.mapData.walls, mapBounds.value);\n            console.log(`🔍 Token \"${token.name}\" 关键角度: ${keyAngles.length}个`);\n            const points = [];\n            for (const angle of keyAngles) {\n                const ray = castRay(token.x, token.y, angle, visionRange, props.mapData.walls);\n                points.push({ angle, ...ray });\n            }\n            points.sort((a, b) => a.angle - b.angle);\n            const polygon = [];\n            let lastX = null;\n            let lastY = null;\n            for (const point of points) {\n                if (lastX !== null && lastY !== null) {\n                    const dx = point.x - lastX;\n                    const dy = point.y - lastY;\n                    const dist = Math.sqrt(dx * dx + dy * dy);\n                    if (dist < 1) {\n                        continue;\n                    }\n                }\n                polygon.push(point.x, point.y);\n                lastX = point.x;\n                lastY = point.y;\n            }\n            if (visionPolygonCache.size > 100) {\n                const firstKey = visionPolygonCache.keys().next().value;\n                visionPolygonCache.delete(firstKey);\n            }\n            visionPolygonCache.set(cacheKey, polygon);\n            console.log(`  📊 投射了 ${keyAngles.length} 条光线`);\n            return polygon;\n        }\n        function castRay(startX, startY, angle, maxDistance, walls) {\n            const result = castRayFromFOV(startX, startY, angle, maxDistance, walls, mapBounds.value);\n            const dist = Math.sqrt((result.x - startX) ** 2 + (result.y - startY) ** 2);\n            return { ...result, dist };\n        }\n        // 🆕 切换门的开关状态\n        function toggleDoor(door) {\n            door.ds = door.ds === 1 ? 0 : 1;\n            console.log(`🚪 门状态切换: ${door.ds === 1 ? '开门' : '关门'}`, door.c);\n            drawWalls();\n            if (fogEnabled.value) {\n                visionPolygonCache.clear();\n                fogNeedsUpdate = true;\n                updateFog();\n            }\n            toastr.info(door.ds === 1 ? '🔓 门已打开' : '🔒 门已关闭');\n        }\n        // 🆕 全部开门\n        function openAllDoors() {\n            let count = 0;\n            for (const door of doors.value) {\n                if (door.ds !== 1) {\n                    door.ds = 1;\n                    count++;\n                }\n            }\n            if (count > 0) {\n                console.log(`🔓 打开了 ${count} 道门`);\n                drawWalls();\n                if (fogEnabled.value) {\n                    visionPolygonCache.clear();\n                    fogNeedsUpdate = true;\n                    updateFog();\n                }\n                toastr.success(`🔓 已打开 ${count} 道门`);\n            }\n            else {\n                toastr.info('所有门都已经是开启状态');\n            }\n        }\n        // 🆕 全部关门\n        function closeAllDoors() {\n            let count = 0;\n            for (const door of doors.value) {\n                if (door.ds !== 0) {\n                    door.ds = 0;\n                    count++;\n                }\n            }\n            if (count > 0) {\n                console.log(`🔒 关闭了 ${count} 道门`);\n                drawWalls();\n                if (fogEnabled.value) {\n                    visionPolygonCache.clear();\n                    fogNeedsUpdate = true;\n                    updateFog();\n                }\n                toastr.success(`🔒 已关闭 ${count} 道门`);\n            }\n            else {\n                toastr.info('所有门都已经是关闭状态');\n            }\n        }\n        function autoFitMap() {\n            if (!app || !containerRef.value)\n                return;\n            const containerWidth = containerRef.value.clientWidth;\n            const containerHeight = containerRef.value.clientHeight;\n            const mapWidth = props.mapData.width;\n            const mapHeight = props.mapData.height;\n            const scaleX = (containerWidth * 0.9) / mapWidth;\n            const scaleY = (containerHeight * 0.9) / mapHeight;\n            const scale = Math.min(scaleX, scaleY);\n            viewport.value.scale = scale;\n            app.stage.scale.set(scale);\n            const scaledWidth = mapWidth * scale;\n            const scaledHeight = mapHeight * scale;\n            app.stage.x = (containerWidth - scaledWidth) / 2;\n            app.stage.y = (containerHeight - scaledHeight) / 2;\n            console.log(`🗺️ 地图已自动缩放: ${(scale * 100).toFixed(1)}% (${mapWidth}x${mapHeight} → ${Math.round(scaledWidth)}x${Math.round(scaledHeight)})`);\n        }\n        function setupInteraction() {\n            if (!app)\n                return;\n            let dragging = false;\n            let lastPos = { x: 0, y: 0 };\n            app.stage.eventMode = 'static';\n            window.addEventListener('keydown', event => {\n                if (event.code === 'Space' && !isSpaceKeyPressed) {\n                    isSpaceKeyPressed = true;\n                    if (canvasRef.value) {\n                        canvasRef.value.style.cursor = 'grab';\n                    }\n                }\n            });\n            window.addEventListener('keyup', event => {\n                if (event.code === 'Space') {\n                    isSpaceKeyPressed = false;\n                    if (canvasRef.value && !dragging) {\n                        canvasRef.value.style.cursor = 'default';\n                    }\n                }\n            });\n            app.stage.on('pointerdown', event => {\n                const canDragMap = isSpaceKeyPressed || (event.target === app?.stage && !isAnyTokenDragging);\n                if (canDragMap) {\n                    dragging = true;\n                    lastPos = { x: event.globalX, y: event.globalY };\n                    if (canvasRef.value) {\n                        canvasRef.value.style.cursor = 'grabbing';\n                    }\n                }\n            });\n            app.stage.on('pointerup', () => {\n                if (dragging) {\n                    dragging = false;\n                    if (canvasRef.value) {\n                        canvasRef.value.style.cursor = isSpaceKeyPressed ? 'grab' : 'default';\n                    }\n                }\n            });\n            app.stage.on('pointermove', event => {\n                if (isAnyTokenDragging && !isSpaceKeyPressed) {\n                    return;\n                }\n                if (dragging) {\n                    const dx = event.globalX - lastPos.x;\n                    const dy = event.globalY - lastPos.y;\n                    app.stage.x += dx;\n                    app.stage.y += dy;\n                    lastPos = { x: event.globalX, y: event.globalY };\n                }\n            });\n            canvasRef.value?.addEventListener('wheel', event => {\n                event.preventDefault();\n                const zoomFactor = event.deltaY > 0 ? 0.9 : 1.1;\n                const newScale = viewport.value.scale * zoomFactor;\n                if (newScale >= 0.1 && newScale <= 5) {\n                    viewport.value.scale = newScale;\n                    gsap.to(app.stage.scale, {\n                        x: newScale,\n                        y: newScale,\n                        duration: 0.2,\n                        ease: 'power2.out',\n                    });\n                }\n            });\n        }\n        function zoomIn() {\n            viewport.value.scale *= 1.2;\n            gsap.to(app.stage.scale, {\n                x: viewport.value.scale,\n                y: viewport.value.scale,\n                duration: 0.3,\n            });\n        }\n        function zoomOut() {\n            viewport.value.scale *= 0.8;\n            gsap.to(app.stage.scale, {\n                x: viewport.value.scale,\n                y: viewport.value.scale,\n                duration: 0.3,\n            });\n        }\n        function resetView() {\n            autoFitMap();\n        }\n        function toggleGrid() {\n            showGrid.value = !showGrid.value;\n            drawGrid();\n        }\n        function toggleFog() {\n            fogEnabled.value = !fogEnabled.value;\n            fogNeedsUpdate = true;\n            updateFog();\n        }\n        function toggleLighting() {\n            lightingEnabled.value = !lightingEnabled.value;\n            drawLights();\n        }\n        function toggleForeground() {\n            foregroundVisible.value = !foregroundVisible.value;\n            if (foregroundSprite) {\n                foregroundSprite.visible = foregroundVisible.value;\n            }\n        }\n        watch(() => props.tokens, () => {\n            if (!isAnyTokenDragging) {\n                drawTokens();\n                if (fogEnabled.value) {\n                    fogNeedsUpdate = true;\n                    updateFog();\n                }\n            }\n        }, { deep: true });\n        onUnmounted(() => {\n            if (fogTexture) {\n                fogTexture.destroy(true);\n            }\n            if (fogSprite) {\n                fogSprite.destroy();\n            }\n            app?.destroy(true);\n        });\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                class: \"map-canvas-container\",\n                ref_key: \"containerRef\",\n                ref: containerRef\n            }, [\n                _createElementVNode(\"canvas\", {\n                    ref_key: \"canvasRef\",\n                    ref: canvasRef\n                }, null, 512 /* NEED_PATCH */),\n                _createCommentVNode(\" 控制面板 \"),\n                _createElementVNode(\"div\", _hoisted_1, [\n                    _createElementVNode(\"button\", {\n                        onClick: zoomIn,\n                        title: \"放大\"\n                    }, [...(_cache[3] || (_cache[3] = [\n                            _createElementVNode(\"span\", null, \"🔍+\", -1 /* CACHED */)\n                        ]))]),\n                    _createElementVNode(\"button\", {\n                        onClick: zoomOut,\n                        title: \"缩小\"\n                    }, [...(_cache[4] || (_cache[4] = [\n                            _createElementVNode(\"span\", null, \"🔍-\", -1 /* CACHED */)\n                        ]))]),\n                    _createElementVNode(\"button\", {\n                        onClick: resetView,\n                        title: \"重置视图\"\n                    }, [...(_cache[5] || (_cache[5] = [\n                            _createElementVNode(\"span\", null, \"🏠\", -1 /* CACHED */)\n                        ]))]),\n                    _createElementVNode(\"button\", {\n                        onClick: toggleGrid,\n                        title: \"显示/隐藏网格\"\n                    }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(showGrid.value ? '⊞' : '⊟'), 1 /* TEXT */)\n                    ]),\n                    _createElementVNode(\"button\", {\n                        onClick: toggleFog,\n                        title: \"战争迷雾\"\n                    }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(fogEnabled.value ? '🌫️' : '☀️'), 1 /* TEXT */)\n                    ]),\n                    _createElementVNode(\"button\", {\n                        onClick: toggleLighting,\n                        title: \"光照系统\"\n                    }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(lightingEnabled.value ? '💡' : '🔦'), 1 /* TEXT */)\n                    ]),\n                    (props.mapData.foreground)\n                        ? (_openBlock(), _createElementBlock(\"button\", {\n                            key: 0,\n                            onClick: toggleForeground,\n                            title: \"显示/隐藏前景层\"\n                        }, [\n                            _createElementVNode(\"span\", null, _toDisplayString(foregroundVisible.value ? '🏠' : '🏚️'), 1 /* TEXT */)\n                        ]))\n                        : _createCommentVNode(\"v-if\", true),\n                    (doors.value.length > 0)\n                        ? (_openBlock(), _createElementBlock(\"button\", {\n                            key: 1,\n                            onClick: _cache[0] || (_cache[0] = ($event) => (showDoorPanel.value = !showDoorPanel.value)),\n                            title: \"门控制面板\"\n                        }, [\n                            _createElementVNode(\"span\", null, _toDisplayString(showDoorPanel.value ? '🚪' : '🚧'), 1 /* TEXT */)\n                        ]))\n                        : _createCommentVNode(\"v-if\", true)\n                ]),\n                _createCommentVNode(\" 🆕 门控制面板 \"),\n                (showDoorPanel.value && doors.value.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                        _createElementVNode(\"div\", _hoisted_3, [\n                            _createElementVNode(\"h3\", null, \"🚪 门控制 (\" + _toDisplayString(doors.value.length) + \")\", 1 /* TEXT */),\n                            _createElementVNode(\"button\", {\n                                onClick: _cache[1] || (_cache[1] = ($event) => (showDoorPanel.value = false))\n                            }, \"✖\")\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_4, [\n                            _createElementVNode(\"div\", { class: \"panel-actions\" }, [\n                                _createElementVNode(\"button\", {\n                                    onClick: openAllDoors,\n                                    class: \"batch-btn\"\n                                }, \"🔓 全部开门\"),\n                                _createElementVNode(\"button\", {\n                                    onClick: closeAllDoors,\n                                    class: \"batch-btn\"\n                                }, \"🔒 全部关门\")\n                            ]),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(doors.value, (door, index) => {\n                                return (_openBlock(), _createElementBlock(\"div\", {\n                                    key: index,\n                                    class: \"door-item\"\n                                }, [\n                                    _createElementVNode(\"div\", _hoisted_5, [\n                                        _createElementVNode(\"span\", _hoisted_6, \"门 \" + _toDisplayString(index + 1), 1 /* TEXT */),\n                                        _createElementVNode(\"span\", _hoisted_7, \"(\" + _toDisplayString(Math.floor(door.c[0])) + \", \" + _toDisplayString(Math.floor(door.c[1])) + \")\", 1 /* TEXT */)\n                                    ]),\n                                    _createElementVNode(\"button\", {\n                                        onClick: ($event) => (toggleDoor(door)),\n                                        class: _normalizeClass(['door-toggle', door.ds === 1 ? 'open' : 'closed'])\n                                    }, _toDisplayString(door.ds === 1 ? '🔓 开门' : '🔒 关门'), 11 /* TEXT, CLASS, PROPS */, _hoisted_8)\n                                ]));\n                            }), 128 /* KEYED_FRAGMENT */))\n                        ])\n                    ]))\n                    : _createCommentVNode(\"v-if\", true),\n                _createCommentVNode(\" Token 信息面板 \"),\n                (selectedToken.value)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                        _createElementVNode(\"h3\", null, _toDisplayString(selectedToken.value.name), 1 /* TEXT */),\n                        _createElementVNode(\"p\", null, \"位置: (\" + _toDisplayString(Math.floor(selectedToken.value.x)) + \", \" + _toDisplayString(Math.floor(selectedToken.value.y)) + \")\", 1 /* TEXT */),\n                        _createElementVNode(\"p\", null, \"视野: \" + _toDisplayString(selectedToken.value.vision) + \" 格\", 1 /* TEXT */),\n                        _createElementVNode(\"button\", {\n                            onClick: _cache[2] || (_cache[2] = ($event) => (selectedToken.value = null))\n                        }, \"关闭\")\n                    ]))\n                    : _createCommentVNode(\"v-if\", true)\n            ], 512 /* NEED_PATCH */));\n        };\n    }\n});\n","import type { Token, Wall } from '../types';\nimport { QuadTree, aabbIntersect, type Rectangle } from '../utils/QuadTree';\n\n/**\n * 视野计算 (Field of View) 使用优化的光线投射算法\n *\n * 性能优化策略:\n * 1. 自适应光线密度 - 只在墙壁端点和关键角度投射光线\n * 2. 缓存墙壁端点 - 避免重复计算\n * 3. 增量更新 - 只在必要时重新计算\n * 4. 四叉树空间分区 - 快速查询附近墙壁 (O(log n))\n */\nexport function useFOV() {\n  // 四叉树缓存 (全局单例,避免重复构建)\n  let wallQuadTree: QuadTree | null = null;\n  let cachedWalls: Wall[] | null = null;\n  /**\n   * 计算从某点到另一点的视线是否被墙壁阻挡\n   * @param x1 起点 X\n   * @param y1 起点 Y\n   * @param x2 终点 X\n   * @param y2 终点 Y\n   * @param walls 墙壁数组\n   * @returns 是否被阻挡\n   */\n  function isLineBlocked(x1: number, y1: number, x2: number, y2: number, walls: Wall[]): boolean {\n    for (const wall of walls) {\n      // 跳过不阻挡视线的墙壁\n      if (wall.sense === 0) continue;\n\n      // 门打开时不阻挡视线\n      if (wall.door > 0 && wall.ds === 1) continue;\n\n      const [wx1, wy1, wx2, wy2] = wall.c;\n\n      if (lineSegmentsIntersect(x1, y1, x2, y2, wx1, wy1, wx2, wy2)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 判断两条线段是否相交 (增强版 - 修复浮点数精度问题)\n   */\n  function lineSegmentsIntersect(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x3: number,\n    y3: number,\n    x4: number,\n    y4: number,\n  ): boolean {\n    const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n\n    // 平行线 - 使用更严格的容差\n    if (Math.abs(denom) < 1e-10) return false;\n\n    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\n    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\n\n    // ✅ 修复: 使用稍微宽松的边界检测以捕获端点附近的交点\n    const epsilon = 1e-10;\n\n    // 检查交点是否在两条线段上\n    return ua >= -epsilon && ua <= 1 + epsilon && ub >= -epsilon && ub <= 1 + epsilon;\n  }\n\n  /**\n   * 检测Token当前位置是否与墙壁重叠\n   * @returns 如果Token在墙上返回true\n   */\n  function isTokenOnWall(x: number, y: number, tokenRadius: number, walls: Wall[], mapBounds?: Rectangle): boolean {\n    let checkWalls = walls;\n    if (mapBounds) {\n      const quadTree = buildQuadTree(walls, mapBounds);\n      // 🔧 修复: 扩大查询范围,从 tokenRadius+10 改为 tokenRadius*2\n      // 原因: 墙壁可能在Token边缘外侧,需要更大的查询范围\n      const queryMargin = tokenRadius * 2; // 从 tokenRadius+10 改为 tokenRadius*2\n      const queryBounds = {\n        x: x - queryMargin,\n        y: y - queryMargin,\n        width: queryMargin * 2,\n        height: queryMargin * 2,\n      };\n      checkWalls = quadTree.query(queryBounds);\n      console.log(\n        `  🔍 四叉树查询: 范围 [${Math.floor(queryBounds.x)},${Math.floor(queryBounds.y)}] → [${Math.floor(queryBounds.x + queryBounds.width)},${Math.floor(queryBounds.y + queryBounds.height)}] 大小 ${Math.floor(queryBounds.width)}x${Math.floor(queryBounds.height)}, 找到 ${checkWalls.length}/${walls.length} 道墙`,\n      );\n\n      // 🔍 超级调试: 如果找到0道墙,手动检查一下\n      if (checkWalls.length === 0) {\n        console.log('  ⚠️ 四叉树找到0道墙,手动检查...');\n        let manualCount = 0;\n        for (const wall of walls) {\n          const [wx1, wy1, wx2, wy2] = wall.c;\n          const wallMinX = Math.min(wx1, wx2);\n          const wallMaxX = Math.max(wx1, wx2);\n          const wallMinY = Math.min(wy1, wy2);\n          const wallMaxY = Math.max(wy1, wy2);\n\n          const intersects = !(\n            wallMaxX < queryBounds.x ||\n            wallMinX > queryBounds.x + queryBounds.width ||\n            wallMaxY < queryBounds.y ||\n            wallMinY > queryBounds.y + queryBounds.height\n          );\n\n          if (intersects && manualCount < 3) {\n            console.log(\n              `    墙 [${Math.floor(wx1)},${Math.floor(wy1)}]→[${Math.floor(wx2)},${Math.floor(wy2)}] 应该在范围内!`,\n            );\n            manualCount++;\n          }\n        }\n        if (manualCount > 0) {\n          console.log(`  ⚠️ 手动检查发现至少 ${manualCount} 道墙在范围内,但四叉树没找到!`);\n        }\n      }\n    }\n\n    for (const wall of checkWalls) {\n      // 只检测阻挡移动的墙\n      if (wall.move !== 1) continue;\n      // 关闭的门也阻挡\n      if (wall.door === 1 && wall.ds === 1) continue;\n\n      const [wx1, wy1, wx2, wy2] = wall.c;\n      const dist = pointToLineSegmentDistance(x, y, wx1, wy1, wx2, wy2);\n\n      console.log(\n        `  🔍 检测墙: [${Math.floor(wx1)},${Math.floor(wy1)}]→[${Math.floor(wx2)},${Math.floor(wy2)}], 距离: ${Math.floor(dist)}px, 半径: ${tokenRadius}px, 碰撞: ${dist < tokenRadius}`,\n      );\n\n      // 如果Token中心距离墙壁 < 半径,说明在墙上\n      if (dist < tokenRadius) {\n        console.log(`  ⚠️ Token在墙上! 距离 ${Math.floor(dist)}px < 半径 ${tokenRadius}px`);\n        return true;\n      }\n    }\n\n    console.log(`  ✅ Token位置合法 (检查了 ${checkWalls.length} 道墙)`);\n    return false;\n  }\n\n  /**\n   * 计算点到线段的最短距离\n   */\n  function pointToLineSegmentDistance(px: number, py: number, x1: number, y1: number, x2: number, y2: number): number {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const lengthSquared = dx * dx + dy * dy;\n\n    if (lengthSquared === 0) {\n      // 线段退化为点\n      return Math.sqrt((px - x1) * (px - x1) + (py - y1) * (py - y1));\n    }\n\n    // 计算投影参数 t\n    let t = ((px - x1) * dx + (py - y1) * dy) / lengthSquared;\n    t = Math.max(0, Math.min(1, t)); // 限制在 [0, 1]\n\n    // 投影点\n    const projX = x1 + t * dx;\n    const projY = y1 + t * dy;\n\n    // 返回距离\n    return Math.sqrt((px - projX) * (px - projX) + (py - projY) * (py - projY));\n  }\n\n  /**\n   * 检测圆形(Token)移动路径是否与墙壁碰撞\n   * 🔧 修复: 考虑Token的圆形半径,而不是只检测中心点!\n   */\n  function circlePathIntersectsWall(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    radius: number,\n    wallX1: number,\n    wallY1: number,\n    wallX2: number,\n    wallY2: number,\n  ): boolean {\n    // 🔧 紧急修复: 增加安全余量,防止浮点数精度问题\n    const safetyMargin = 5; // 5像素安全余量\n    const effectiveRadius = radius + safetyMargin;\n\n    // 1. 检查起点是否在墙壁半径范围内\n    const startDist = pointToLineSegmentDistance(x1, y1, wallX1, wallY1, wallX2, wallY2);\n    if (startDist < effectiveRadius) {\n      return true;\n    }\n\n    // 2. 检查终点是否在墙壁半径范围内\n    const endDist = pointToLineSegmentDistance(x2, y2, wallX1, wallY1, wallX2, wallY2);\n    if (endDist < effectiveRadius) {\n      return true;\n    }\n\n    // 3. 检查移动路径(扫过的胶囊体)是否与墙壁相交\n    // 在移动路径上采样多个点检测\n    const moveDistance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    // 🔧 增加采样密度: 每 radius/3 距离采样一次\n    const steps = Math.max(5, Math.ceil(moveDistance / (radius / 3)));\n\n    for (let i = 0; i <= steps; i++) {\n      const t = i / steps;\n      const testX = x1 + (x2 - x1) * t;\n      const testY = y1 + (y2 - y1) * t;\n\n      const dist = pointToLineSegmentDistance(testX, testY, wallX1, wallY1, wallX2, wallY2);\n      if (dist < effectiveRadius) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 计算某个 Token 的可见区域\n   * @param token Token 信息\n   * @param walls 墙壁数组\n   * @param gridSize 网格大小\n   * @returns 可见的网格坐标数组\n   */\n  function calculateVisibleArea(token: Token, walls: Wall[], gridSize: number): Array<{ x: number; y: number }> {\n    const visible: Array<{ x: number; y: number }> = [];\n\n    // Token 中心点\n    const cx = token.x;\n    const cy = token.y;\n    const visionRange = token.vision * gridSize;\n\n    if (visionRange <= 0) return visible;\n\n    // 使用光线投射采样\n    const rays = 360; // 投射光线数量\n    const angleStep = (Math.PI * 2) / rays;\n\n    for (let i = 0; i < rays; i++) {\n      const angle = i * angleStep;\n      const dx = Math.cos(angle);\n      const dy = Math.sin(angle);\n\n      // 沿着光线方向采样\n      for (let dist = 0; dist <= visionRange; dist += gridSize / 2) {\n        const x = cx + dx * dist;\n        const y = cy + dy * dist;\n\n        // 检查是否被墙壁阻挡\n        if (isLineBlocked(cx, cy, x, y, walls)) {\n          break;\n        }\n\n        // 转换为网格坐标\n        const gridX = Math.floor(x / gridSize);\n        const gridY = Math.floor(y / gridSize);\n\n        // 添加到可见区域 (去重)\n        if (!visible.some(v => v.x === gridX && v.y === gridY)) {\n          visible.push({ x: gridX, y: gridY });\n        }\n      }\n    }\n\n    return visible;\n  }\n\n  /**\n   * 使用 Shadow Casting 算法计算视野 (更高效的算法)\n   * 基于对称阴影投射算法\n   */\n  function calculateFOVShadowCasting(\n    centerX: number,\n    centerY: number,\n    visionRange: number,\n    walls: Wall[],\n    gridSize: number,\n  ): Set<string> {\n    const visible = new Set<string>();\n    const gridCenterX = Math.floor(centerX / gridSize);\n    const gridCenterY = Math.floor(centerY / gridSize);\n\n    // 添加中心点\n    visible.add(`${gridCenterX},${gridCenterY}`);\n\n    // 8个方向的扫描\n    const directions = [\n      [1, 0],\n      [1, 1],\n      [0, 1],\n      [-1, 1],\n      [-1, 0],\n      [-1, -1],\n      [0, -1],\n      [1, -1],\n    ];\n\n    for (const [dx, dy] of directions) {\n      castLight(gridCenterX, gridCenterY, visionRange, 1, 1.0, 0.0, dx, dy, 0, 0, walls, gridSize, visible);\n    }\n\n    return visible;\n  }\n\n  /**\n   * 递归投射光线 (Shadow Casting 核心算法)\n   */\n  function castLight(\n    cx: number,\n    cy: number,\n    radius: number,\n    row: number,\n    startSlope: number,\n    endSlope: number,\n    xx: number,\n    xy: number,\n    yx: number,\n    yy: number,\n    walls: Wall[],\n    gridSize: number,\n    visible: Set<string>,\n  ): void {\n    if (startSlope < endSlope) return;\n\n    let nextStartSlope = startSlope;\n\n    for (let i = row; i <= radius; i++) {\n      let blocked = false;\n\n      for (let dx = -i; dx <= 0; dx++) {\n        const dy = -i;\n        const l_slope = (dx - 0.5) / (dy + 0.5);\n        const r_slope = (dx + 0.5) / (dy - 0.5);\n\n        if (startSlope < r_slope) continue;\n        if (endSlope > l_slope) break;\n\n        const x = cx + dx * xx + dy * xy;\n        const y = cy + dx * yx + dy * yy;\n\n        if (Math.abs(x - cx) + Math.abs(y - cy) <= radius) {\n          visible.add(`${x},${y}`);\n        }\n\n        if (blocked) {\n          if (isGridBlocked(x, y, walls, gridSize)) {\n            nextStartSlope = r_slope;\n            continue;\n          } else {\n            blocked = false;\n            startSlope = nextStartSlope;\n          }\n        } else {\n          if (isGridBlocked(x, y, walls, gridSize) && i < radius) {\n            blocked = true;\n            castLight(cx, cy, radius, i + 1, startSlope, l_slope, xx, xy, yx, yy, walls, gridSize, visible);\n            nextStartSlope = r_slope;\n          }\n        }\n      }\n\n      if (blocked) break;\n    }\n  }\n\n  /**\n   * 检查某个网格是否被墙壁阻挡\n   */\n  function isGridBlocked(gridX: number, gridY: number, walls: Wall[], gridSize: number): boolean {\n    const x = gridX * gridSize + gridSize / 2;\n    const y = gridY * gridSize + gridSize / 2;\n\n    for (const wall of walls) {\n      if (wall.sense === 0) continue;\n      if (wall.door > 0 && wall.ds === 1) continue;\n\n      const [x1, y1, x2, y2] = wall.c;\n\n      // 检查墙壁是否在这个网格内\n      const minX = Math.min(x1, x2);\n      const maxX = Math.max(x1, x2);\n      const minY = Math.min(y1, y2);\n      const maxY = Math.max(y1, y2);\n\n      if (x >= minX && x <= maxX && y >= minY && y <= maxY) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 构建或更新四叉树\n   */\n  function buildQuadTree(walls: Wall[], mapBounds: Rectangle): QuadTree {\n    // 如果墙壁没变化,直接返回缓存\n    if (wallQuadTree && cachedWalls === walls) {\n      return wallQuadTree;\n    }\n\n    console.log(`🌳 构建四叉树: 地图边界 [${mapBounds.x}, ${mapBounds.y}, ${mapBounds.width}, ${mapBounds.height}]`);\n\n    // 构建新的四叉树\n    const quadTree = new QuadTree(mapBounds, 10);\n\n    let insertedCount = 0;\n    for (const wall of walls) {\n      const success = quadTree.insert(wall);\n      if (success) insertedCount++;\n    }\n\n    console.log(`🌳 四叉树构建完成: 插入 ${insertedCount}/${walls.length} 道墙`);\n    const stats = quadTree.getStats();\n    console.log(`🌳 四叉树统计: 节点数=${stats.nodes}, 墙壁数=${stats.walls}, 最大深度=${stats.maxDepth}`);\n\n    // 🔍 测试: 查询中心区域 (5100, 4350) → (5400, 4650)\n    const testQuery = quadTree.query({ x: 5100, y: 4350, width: 300, height: 300 });\n    console.log(`🧪 测试查询 [5100,4350,300x300]: 找到 ${testQuery.length} 道墙`);\n    if (testQuery.length > 0) {\n      console.log(\n        '  前3道墙:',\n        testQuery.slice(0, 3).map(w => `[${w.c[0]},${w.c[1]}]→[${w.c[2]},${w.c[3]}]`),\n      );\n    }\n\n    // 缓存\n    wallQuadTree = quadTree;\n    cachedWalls = walls;\n\n    return quadTree;\n  }\n\n  /**\n   * 检查移动路径是否被墙壁阻挡（用于碰撞检测）\n   * 与 isLineBlocked 不同，这个函数检查阻挡移动的墙壁\n   *\n   * 门窗系统规则:\n   * - 门(door=1): 关闭时(ds=0)阻挡移动和视线, 打开时(ds=1)不阻挡\n   * - 窗户(sense=0): 不阻挡视线但阻挡移动\n   * - 普通墙(move=1): 始终阻挡移动\n   *\n   * 性能优化:\n   * - 使用四叉树只查询附近墙壁 (O(log n))\n   * - AABB 快速剔除 (大部分墙壁不需要精确检测)\n   *\n   * 🔧 修复: 考虑Token的圆形半径,而不是只检测中心点!\n   */\n  function isMovementBlocked(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    walls: Wall[],\n    tokenRadius: number = 0,\n    mapBounds?: Rectangle,\n  ): boolean {\n    // 如果提供了 mapBounds,使用四叉树优化\n    if (mapBounds) {\n      const quadTree = buildQuadTree(walls, mapBounds);\n\n      // 🔧 修复: 计算移动路径的边界框,扩展 tokenRadius*2 以确保不遗漏墙壁\n      const queryMargin = Math.max(tokenRadius * 2, 20); // 至少20px,或Token半径的2倍\n      const queryBounds: Rectangle = {\n        x: Math.min(x1, x2) - queryMargin,\n        y: Math.min(y1, y2) - queryMargin,\n        width: Math.abs(x2 - x1) + queryMargin * 2,\n        height: Math.abs(y2 - y1) + queryMargin * 2,\n      };\n\n      // 只查询附近的墙壁 (通常只有 5-10 道,而不是全部 500 道!)\n      const nearbyWalls = quadTree.query(queryBounds);\n\n      for (const wall of nearbyWalls) {\n        // 跳过不阻挡移动的墙壁\n        if (wall.move === 0) continue;\n\n        // 门打开时不阻挡移动\n        if (wall.door > 0 && wall.ds === 1) continue;\n\n        // AABB 快速检测 (极快,只有4次比较)\n        // 扩大检测范围以包含Token半径\n        if (!aabbIntersect(x1, y1, x2, y2, wall)) {\n          continue;\n        }\n\n        // 🔧 修复: 使用圆形碰撞检测而不是线段相交\n        const [wx1, wy1, wx2, wy2] = wall.c;\n        if (tokenRadius > 0) {\n          // 考虑Token半径的精确检测\n          if (circlePathIntersectsWall(x1, y1, x2, y2, tokenRadius, wx1, wy1, wx2, wy2)) {\n            return true;\n          }\n        } else {\n          // 降级为线段相交检测\n          if (lineSegmentsIntersect(x1, y1, x2, y2, wx1, wy1, wx2, wy2)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    // 降级方案: 如果没有 mapBounds,使用原始方法\n    for (const wall of walls) {\n      // 跳过不阻挡移动的墙壁\n      if (wall.move === 0) continue;\n\n      // 门打开时不阻挡移动\n      if (wall.door > 0 && wall.ds === 1) continue;\n\n      const [wx1, wy1, wx2, wy2] = wall.c;\n\n      if (lineSegmentsIntersect(x1, y1, x2, y2, wx1, wy1, wx2, wy2)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 判断墙壁是否阻挡视线 (来自简化版的准确实现)\n   */\n  function shouldBlockVision(wall: Wall): boolean {\n    // 窗户不阻挡视线\n    if (wall.sense === 0) return false;\n\n    // 门的处理\n    if (wall.door === 1) {\n      // undefined或1都视为开门\n      if (wall.ds === undefined || wall.ds === 1) return false;\n      return true; // ds=0 关门,阻挡\n    }\n\n    // 普通墙壁\n    return wall.sense === 1;\n  }\n\n  /**\n   * 投射光线，找到最近的墙壁交点 (优化版 - 支持四叉树)\n   * 🔧 修复: 添加微小偏移避免光线\"擦边\"导致的视野泄露\n   */\n  function castRay(\n    startX: number,\n    startY: number,\n    angle: number,\n    maxDistance: number,\n    walls: Wall[],\n    mapBounds?: Rectangle,\n  ): { x: number; y: number } {\n    const dx = Math.cos(angle);\n    const dy = Math.sin(angle);\n    const endX = startX + dx * maxDistance;\n    const endY = startY + dy * maxDistance;\n\n    let closestDist = maxDistance;\n    let closestX = endX;\n    let closestY = endY;\n\n    // 🚀 优化: 使用四叉树只检查光线路径附近的墙壁\n    let checkWalls = walls;\n    if (mapBounds) {\n      const quadTree = buildQuadTree(walls, mapBounds);\n\n      // 计算光线扫过的边界框\n      const margin = 10; // 稍微扩大查询范围\n      const queryBounds: Rectangle = {\n        x: Math.min(startX, endX) - margin,\n        y: Math.min(startY, endY) - margin,\n        width: Math.abs(endX - startX) + margin * 2,\n        height: Math.abs(endY - startY) + margin * 2,\n      };\n\n      checkWalls = quadTree.query(queryBounds);\n    }\n\n    // 遍历墙壁寻找交点\n    for (const wall of checkWalls) {\n      if (!shouldBlockVision(wall)) continue;\n\n      const [wx1, wy1, wx2, wy2] = wall.c;\n      const intersection = rayWallIntersection(startX, startY, endX, endY, wx1, wy1, wx2, wy2);\n\n      if (intersection) {\n        const dist = Math.sqrt((intersection.x - startX) ** 2 + (intersection.y - startY) ** 2);\n\n        if (dist < closestDist) {\n          closestDist = dist;\n          closestX = intersection.x;\n          closestY = intersection.y;\n        }\n      }\n    }\n\n    // 🔧 关键修复: 如果光线击中墙壁，将交点稍微向Token方向拉回\n    // 这样可以避免\"擦边\"导致的视野泄露问题\n    if (closestDist < maxDistance) {\n      const pullbackDistance = 2; // 向回拉2像素\n      const ratio = Math.max(0, (closestDist - pullbackDistance) / closestDist);\n      closestX = startX + (closestX - startX) * ratio;\n      closestY = startY + (closestY - startY) * ratio;\n    }\n\n    return { x: closestX, y: closestY };\n  }\n\n  /**\n   * 计算光线与墙壁的交点\n   */\n  function rayWallIntersection(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x3: number,\n    y3: number,\n    x4: number,\n    y4: number,\n  ): { x: number; y: number } | null {\n    const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    if (Math.abs(denom) < 1e-10) return null;\n\n    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\n    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\n\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n      return {\n        x: x1 + ua * (x2 - x1),\n        y: y1 + ua * (y2 - y1),\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * 获取视野范围内的所有关键角度（来自简化版的准确实现）\n   * 只在墙壁端点投射光线，大幅减少计算量\n   */\n  function getKeyAngles(\n    centerX: number,\n    centerY: number,\n    visionRange: number,\n    walls: Wall[],\n    mapBounds?: Rectangle,\n  ): number[] {\n    const angles = new Set<number>();\n\n    // 🚀 优化: 使用四叉树只查询视野范围内的墙壁\n    let nearbyWalls = walls;\n    if (mapBounds) {\n      const quadTree = buildQuadTree(walls, mapBounds);\n\n      // 查询视野范围内的墙壁 (圆形区域用正方形近似)\n      const queryBounds: Rectangle = {\n        x: centerX - visionRange,\n        y: centerY - visionRange,\n        width: visionRange * 2,\n        height: visionRange * 2,\n      };\n\n      nearbyWalls = quadTree.query(queryBounds);\n\n      // 性能日志\n      if (nearbyWalls.length < walls.length) {\n        console.log(\n          `  🔍 视野优化: 只检查 ${nearbyWalls.length}/${walls.length} 道墙 (节省 ${Math.round((1 - nearbyWalls.length / walls.length) * 100)}%)`,\n        );\n      }\n    }\n\n    // 1. 为每个墙壁端点和中点生成角度 (增强精度)\n    for (const wall of nearbyWalls) {\n      // 跳过不阻挡视线的墙壁 (使用简化版的准确函数)\n      if (!shouldBlockVision(wall)) continue;\n\n      const [x1, y1, x2, y2] = wall.c;\n\n      // 墙壁端点1\n      const dist1 = Math.sqrt((x1 - centerX) ** 2 + (y1 - centerY) ** 2);\n      if (dist1 <= visionRange * 1.2) {\n        const angle = Math.atan2(y1 - centerY, x1 - centerX);\n        // 🔧 增加更多微调角度以提高精度\n        angles.add(angle - 0.0001); // 约0.006度\n        angles.add(angle - 0.00001);\n        angles.add(angle);\n        angles.add(angle + 0.00001);\n        angles.add(angle + 0.0001);\n      }\n\n      // 墙壁端点2\n      const dist2 = Math.sqrt((x2 - centerX) ** 2 + (y2 - centerY) ** 2);\n      if (dist2 <= visionRange * 1.2) {\n        const angle = Math.atan2(y2 - centerY, x2 - centerX);\n        angles.add(angle - 0.0001);\n        angles.add(angle - 0.00001);\n        angles.add(angle);\n        angles.add(angle + 0.00001);\n        angles.add(angle + 0.0001);\n      }\n\n      // 🆕 墙壁中点 (捕获长墙壁)\n      const midX = (x1 + x2) / 2;\n      const midY = (y1 + y2) / 2;\n      const distMid = Math.sqrt((midX - centerX) ** 2 + (midY - centerY) ** 2);\n      if (distMid <= visionRange * 1.2) {\n        const angleMid = Math.atan2(midY - centerY, midX - centerX);\n        angles.add(angleMid - 0.00001);\n        angles.add(angleMid);\n        angles.add(angleMid + 0.00001);\n      }\n    }\n\n    // 2. 添加8个基础方向\n    for (let i = 0; i < 8; i++) {\n      angles.add((i * Math.PI) / 4);\n    }\n\n    // 3. 如果角度太少,添加均匀分布的光线\n    if (angles.size < 36) {\n      for (let i = 0; i < 36; i++) {\n        angles.add((i * Math.PI * 2) / 36);\n      }\n    }\n\n    return Array.from(angles).sort((a, b) => a - b);\n  }\n\n  return {\n    isLineBlocked,\n    isMovementBlocked,\n    isTokenOnWall,\n    calculateVisibleArea,\n    calculateFOVShadowCasting,\n    getKeyAngles,\n    buildQuadTree,\n    castRay, // 导出准确的光线投射函数\n    shouldBlockVision, // 导出墙壁判断函数\n  };\n}\n","/* unplugin-vue-components disabled */import script from \"./MapCanvas-V4.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./MapCanvas-V4.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./MapCanvas-V4.vue?vue&type=style&index=0&id=f6ba9c7a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.2_96d39c74a8c06e57a334244d199e36ff/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f6ba9c7a\"]])\n\nexport default __exports__","const __WEBPACK_NAMESPACE_OBJECT__ = _;","const __WEBPACK_NAMESPACE_OBJECT__ = z;","import { z } from 'zod';\n\n/**\n * VTT 光源定义\n */\nexport const LightSchema = z.object({\n  x: z.number(),\n  y: z.number(),\n  dim: z.number().default(0), // 微光范围 (格数)\n  bright: z.number().default(0), // 明亮范围 (格数)\n  tintColor: z.string().default('#ffffff'),\n  tintAlpha: z.number().min(0).max(1).default(0.5),\n  animation: z\n    .object({\n      type: z.string().optional(),\n      speed: z.number().optional(),\n      intensity: z.number().optional(),\n    })\n    .optional(),\n});\n\n/**\n * VTT 墙壁定义\n */\nexport const WallSchema = z.object({\n  c: z.tuple([z.number(), z.number(), z.number(), z.number()]), // [x1, y1, x2, y2]\n  move: z.union([z.literal(0), z.literal(1)]).default(1), // 0=可穿过, 1=阻挡移动\n  sense: z.union([z.literal(0), z.literal(1)]).default(1), // 0=可看穿, 1=阻挡视线\n  sound: z.union([z.literal(0), z.literal(1)]).default(1), // 0=可听穿, 1=阻挡声音\n  door: z.union([z.literal(0), z.literal(1), z.literal(2)]).default(0), // 0=普通墙, 1=门, 2=秘门\n  ds: z.union([z.literal(0), z.literal(1)]).optional(), // 门状态: 0=关闭, 1=打开\n});\n\n/**\n * VTT Token (角色标记)\n */\nexport const TokenSchema = z.object({\n  id: z.string(),\n  name: z.string().default('未命名'),\n  x: z.number(),\n  y: z.number(),\n  width: z.number().default(1), // 占据格数\n  height: z.number().default(1),\n  img: z.string().optional(), // Token 图片 URL\n  vision: z.number().default(0), // 视野范围 (格数), 0=无视野\n  dimVision: z.number().default(0), // 微光视觉范围\n  rotation: z.number().default(0), // 旋转角度\n  hidden: z.boolean().default(false), // 是否隐藏\n  elevation: z.number().default(0), // 高度\n});\n\n/**\n * VTT 地图配置\n */\nexport const VTTMapSchema = z.object({\n  name: z.string().default('未命名地图'),\n  width: z.number().positive(),\n  height: z.number().positive(),\n  grid: z.number().positive().default(100), // 每格像素数\n  shiftX: z.number().default(0),\n  shiftY: z.number().default(0),\n  gridDistance: z.number().positive().default(5), // 每格代表的距离\n  gridUnits: z.string().default('ft'), // 距离单位\n  padding: z.number().default(0),\n  gridColor: z.string().default('#000000'),\n  gridAlpha: z.number().min(0).max(1).default(0.2),\n  globalLight: z.boolean().default(true), // 全局光照\n  darkness: z.number().min(0).max(1).default(0), // 黑暗等级 (0=白天, 1=黑夜)\n  backgroundColor: z.string().default('#000000'),\n\n  // 资源 - 多层支持\n  img: z.string().nullable().optional(), // 背景图片 URL (底层)\n  foreground: z.string().nullable().optional(), // 前景图片 URL (顶层,遮挡 Token)\n\n  // 动态元素\n  lights: z.array(LightSchema).default([]),\n  walls: z.array(WallSchema).default([]),\n  tokens: z.array(TokenSchema).default([]),\n\n  // 战争迷雾\n  fogOfWar: z\n    .object({\n      enabled: z.boolean().default(false),\n      explored: z.array(z.array(z.boolean())).optional(), // 二维数组,记录已探索区域\n    })\n    .default({ enabled: false }),\n});\n\nexport type VTTMap = z.infer<typeof VTTMapSchema>;\nexport type Light = z.infer<typeof LightSchema>;\nexport type Wall = z.infer<typeof WallSchema>;\nexport type Token = z.infer<typeof TokenSchema>;\n\n/**\n * 地图状态 (保存到酒馆变量)\n */\nexport const MapStateSchema = z.object({\n  mapId: z.string(),\n  tokens: z.array(TokenSchema), // Token 位置\n  fogExplored: z.array(z.array(z.boolean())).optional(), // 已探索区域\n  viewport: z\n    .object({\n      // 视口状态\n      x: z.number().default(0),\n      y: z.number().default(0),\n      scale: z.number().default(1),\n    })\n    .default({}),\n});\n\nexport type MapState = z.infer<typeof MapStateSchema>;\n","import _ from 'lodash';\nimport { ref, watch } from 'vue';\nimport type { MapState, Token } from '../types';\nimport { MapStateSchema } from '../types';\n\n/**\n * 地图状态管理\n * 使用酒馆变量系统持久化地图状态\n */\nexport function useMapState(mapId: string) {\n  // 从酒馆变量加载状态\n  const loadState = (): MapState => {\n    try {\n      const saved = getVariables({ type: 'chat' });\n      const key = `vtt_map_${mapId}`;\n\n      if (saved[key]) {\n        // 尝试解析，如果失败则使用默认值\n        const data = saved[key];\n\n        // 如果旧数据没有 mapId，添加它\n        if (typeof data === 'object' && data !== null && !('mapId' in data)) {\n          data.mapId = mapId;\n        }\n\n        return MapStateSchema.parse(data);\n      }\n    } catch (error) {\n      console.warn('加载地图状态失败，使用默认状态:', error);\n      // 清除损坏的数据\n      try {\n        const key = `vtt_map_${mapId}`;\n        replaceVariables({ [key]: undefined }, { type: 'chat' });\n      } catch {}\n    }\n\n    return {\n      mapId,\n      tokens: [],\n      viewport: { x: 0, y: 0, scale: 1 },\n    };\n  };\n\n  // 保存状态到酒馆变量\n  const saveState = (state: MapState) => {\n    try {\n      const key = `vtt_map_${mapId}`;\n      const cleanState = _.cloneDeep(state);\n\n      replaceVariables({ [key]: cleanState }, { type: 'chat' });\n    } catch (error) {\n      console.error('保存地图状态失败:', error);\n    }\n  };\n\n  const state = ref<MapState>(loadState());\n\n  // 监听状态变化并自动保存 (防抖 1 秒)\n  const debouncedSave = _.debounce((newState: MapState) => {\n    saveState(newState);\n  }, 1000);\n\n  watch(\n    state,\n    newState => {\n      debouncedSave(newState);\n    },\n    { deep: true },\n  );\n\n  /**\n   * 更新 Token 位置\n   */\n  const updateTokenPosition = (tokenId: string, x: number, y: number) => {\n    const token = state.value.tokens.find(t => t.id === tokenId);\n    if (token) {\n      token.x = x;\n      token.y = y;\n    }\n  };\n\n  /**\n   * 添加 Token\n   */\n  const addToken = (token: Token) => {\n    const exists = state.value.tokens.find(t => t.id === token.id);\n    if (!exists) {\n      state.value.tokens.push(token);\n    }\n  };\n\n  /**\n   * 删除 Token\n   */\n  const removeToken = (tokenId: string) => {\n    const index = state.value.tokens.findIndex(t => t.id === tokenId);\n    if (index !== -1) {\n      state.value.tokens.splice(index, 1);\n    }\n  };\n\n  /**\n   * 更新视口\n   */\n  const updateViewport = (x: number, y: number, scale: number) => {\n    state.value.viewport = { x, y, scale };\n  };\n\n  /**\n   * 标记区域为已探索\n   */\n  const markExplored = (gridX: number, gridY: number) => {\n    if (!state.value.fogExplored) {\n      state.value.fogExplored = [];\n    }\n\n    if (!state.value.fogExplored[gridY]) {\n      state.value.fogExplored[gridY] = [];\n    }\n\n    state.value.fogExplored[gridY][gridX] = true;\n  };\n\n  /**\n   * 检查区域是否已探索\n   */\n  const isExplored = (gridX: number, gridY: number): boolean => {\n    return state.value.fogExplored?.[gridY]?.[gridX] ?? false;\n  };\n\n  return {\n    state,\n    updateTokenPosition,\n    addToken,\n    removeToken,\n    updateViewport,\n    markExplored,\n    isExplored,\n    saveState: () => saveState(state.value),\n  };\n}\n","import { defineComponent as _defineComponent } from 'vue';\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = { class: \"vtt-viewer\" };\nconst _hoisted_2 = {\n    key: 0,\n    class: \"loading\"\n};\nconst _hoisted_3 = {\n    key: 1,\n    class: \"error\"\n};\nconst _hoisted_4 = { class: \"error-actions\" };\nconst _hoisted_5 = {\n    key: 2,\n    class: \"upload-dialog\"\n};\nconst _hoisted_6 = { class: \"upload-content\" };\nconst _hoisted_7 = { class: \"upload-actions\" };\nconst _hoisted_8 = { class: \"toolbar\" };\nconst _hoisted_9 = { class: \"toolbar-actions\" };\nconst _hoisted_10 = { class: \"map-wrapper\" };\nconst _hoisted_11 = {\n    key: 0,\n    class: \"side-panel token-manager\"\n};\nconst _hoisted_12 = { class: \"panel-header\" };\nconst _hoisted_13 = { class: \"panel-content\" };\nconst _hoisted_14 = { class: \"token-header\" };\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = { class: \"token-details\" };\nconst _hoisted_17 = [\"onUpdate:modelValue\"];\nconst _hoisted_18 = [\"onUpdate:modelValue\"];\nconst _hoisted_19 = [\"onUpdate:modelValue\"];\nconst _hoisted_20 = [\"onUpdate:modelValue\"];\nconst _hoisted_21 = [\"onUpdate:modelValue\"];\nconst _hoisted_22 = {\n    key: 1,\n    class: \"side-panel map-info\"\n};\nconst _hoisted_23 = { class: \"panel-header\" };\nconst _hoisted_24 = { class: \"panel-content\" };\nconst _hoisted_25 = { class: \"info-item\" };\nconst _hoisted_26 = { class: \"info-item\" };\nconst _hoisted_27 = { class: \"info-item\" };\nconst _hoisted_28 = { class: \"info-item\" };\nconst _hoisted_29 = { class: \"info-item\" };\nconst _hoisted_30 = { class: \"info-item\" };\nconst _hoisted_31 = { class: \"info-item\" };\nimport { computed, onMounted, ref } from 'vue';\n// import MapCanvas from './components/MapCanvas.vue'; // V1\n// import MapCanvas from './components/MapCanvas-V2.vue'; // V2 - 有问题,暂时不用\n// import MapCanvas from './components/MapCanvas-V3.vue'; // V3 - 使用Canvas 2D destination-out方法（完美版-备份）\nimport MapCanvas from './components/MapCanvas-V4.vue'; // V4 - V3基础上 + 门控制系统\nimport { useMapState } from './composables/useMapState';\nimport { TokenSchema, VTTMapSchema } from './types';\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'App',\n    setup(__props) {\n        const loading = ref(true);\n        const error = ref(null);\n        const mapData = ref(null);\n        const showTokenManager = ref(false);\n        const showMapInfo = ref(false);\n        const showUploadDialog = ref(false);\n        const jsonInput = ref('');\n        // 地图状态管理\n        const mapStateManager = ref(null);\n        const currentTokens = computed(() => {\n            const mapTokens = mapData.value?.tokens || [];\n            const stateTokens = mapStateManager.value?.state?.value?.tokens || [];\n            console.log(`🔍 currentTokens 计算:`);\n            console.log(`  - mapData.tokens: ${mapTokens.length} 个`);\n            console.log(`  - mapStateManager.tokens: ${stateTokens.length} 个`);\n            console.log(`  - mapStateManager 存在: ${!!mapStateManager.value}`);\n            if (!mapStateManager.value) {\n                console.log(`  ✅ 返回 mapData.tokens (${mapTokens.length} 个)`);\n                return mapTokens;\n            }\n            const result = stateTokens.length > 0 ? stateTokens : mapTokens;\n            console.log(`  ✅ 返回: ${result.length} 个 Token`);\n            return result;\n        });\n        // 加载示例地图\n        function loadExampleMap() {\n            const exampleMap = {\n                name: '示例地图',\n                width: 3000,\n                height: 2000,\n                grid: 100,\n                gridDistance: 5,\n                gridUnits: 'ft',\n                backgroundColor: '#1a1a1a',\n                globalLight: false,\n                darkness: 0.5,\n                img: null,\n                foreground: null,\n                lights: [\n                    { x: 500, y: 500, dim: 8, bright: 4, tintColor: '#ffaa00', tintAlpha: 0.5 },\n                    { x: 1500, y: 1000, dim: 10, bright: 5, tintColor: '#ffffff', tintAlpha: 0.8 },\n                ],\n                walls: [\n                    { c: [0, 0, 3000, 0], move: 1, sense: 1, sound: 1, door: 0 },\n                    { c: [3000, 0, 3000, 2000], move: 1, sense: 1, sound: 1, door: 0 },\n                    { c: [3000, 2000, 0, 2000], move: 1, sense: 1, sound: 1, door: 0 },\n                    { c: [0, 2000, 0, 0], move: 1, sense: 1, sound: 1, door: 0 },\n                ],\n                tokens: [{ id: 'token1', name: '玩家', x: 500, y: 500, width: 1, vision: 12 }],\n                fogOfWar: { enabled: false },\n            };\n            try {\n                const parsed = VTTMapSchema.parse(exampleMap);\n                mapData.value = parsed;\n                mapStateManager.value = useMapState(parsed.name);\n                // 安全地检查并添加 tokens（添加更多空值检查）\n                if (mapStateManager.value?.state?.value?.tokens &&\n                    mapStateManager.value.state.value.tokens.length === 0 &&\n                    parsed.tokens &&\n                    parsed.tokens.length > 0) {\n                    parsed.tokens.forEach(token => mapStateManager.value?.addToken(token));\n                }\n                error.value = null;\n                loading.value = false;\n                showUploadDialog.value = false;\n                toastr.success(`示例地图加载成功`);\n            }\n            catch (e) {\n                error.value = e instanceof Error ? e.message : String(e);\n                toastr.error('示例地图加载失败: ' + error.value);\n            }\n        }\n        // 处理文件上传\n        function handleFileUpload(event) {\n            const file = event.target.files?.[0];\n            if (!file)\n                return;\n            const reader = new FileReader();\n            reader.onload = e => {\n                jsonInput.value = e.target?.result;\n                // 🔧 关键修复：文件上传后自动加载\n                console.log(`📁 文件已上传: ${file.name} (${file.size} 字节)`);\n                loadFromJSON();\n            };\n            reader.readAsText(file);\n        }\n        // 从 JSON 加载\n        function loadFromJSON() {\n            try {\n                console.log('开始解析 JSON...');\n                const data = JSON.parse(jsonInput.value);\n                console.log('JSON 解析成功，数据:', data);\n                console.log('开始 Zod 验证...');\n                const parsed = VTTMapSchema.parse(data);\n                console.log('Zod 验证成功');\n                mapData.value = parsed;\n                console.log(`📊 地图数据: ${parsed.tokens?.length || 0} 个 Token`);\n                // 🔧 关键修复：重新加载时，先清除旧的状态管理器\n                // 清除旧的地图状态\n                const mapKey = `vtt_map_${parsed.name}`;\n                const chatVars = getVariables({ type: 'chat' });\n                if (chatVars[mapKey]) {\n                    console.log(`🗑️ 清除旧的地图状态: ${mapKey}`);\n                    delete chatVars[mapKey];\n                    replaceVariables(chatVars, { type: 'chat' });\n                }\n                // 重新创建状态管理器（现在会从空状态开始）\n                mapStateManager.value = useMapState(parsed.name);\n                console.log(`📊 状态管理器: ${mapStateManager.value?.state?.value?.tokens?.length || 0} 个 Token`);\n                // 添加 Token 到状态管理器\n                if (parsed.tokens && parsed.tokens.length > 0) {\n                    console.log(`✅ 添加 ${parsed.tokens.length} 个 Token 到状态管理器`);\n                    parsed.tokens.forEach(token => {\n                        mapStateManager.value?.addToken(token);\n                        console.log(`  - 添加 Token: ${token.name} (${token.x}, ${token.y})`);\n                    });\n                }\n                else {\n                    console.log(`⚠️ 地图数据中没有 Token`);\n                }\n                // 保存到 localStorage\n                const variables = getVariables({ type: 'script', script_id: getScriptId() });\n                variables.vtt_map_data = parsed;\n                replaceVariables(variables, { type: 'script', script_id: getScriptId() });\n                error.value = null;\n                loading.value = false;\n                showUploadDialog.value = false;\n                jsonInput.value = '';\n                toastr.success(`地图 \"${parsed.name}\" 加载成功`);\n            }\n            catch (e) {\n                console.error('详细错误:', e);\n                if (e instanceof Error) {\n                    console.error('错误堆栈:', e.stack);\n                }\n                toastr.error('JSON 解析失败: ' + (e instanceof Error ? e.message : String(e)));\n            }\n        }\n        // 加载地图数据\n        async function loadMap() {\n            loading.value = true;\n            error.value = null;\n            try {\n                // 从酒馆变量加载地图配置\n                const mapConfig = getVariables({ type: 'script', script_id: getScriptId() });\n                if (!mapConfig.vtt_map_url && !mapConfig.vtt_map_data) {\n                    throw new Error('未配置地图数据。请在脚本变量中设置 vtt_map_url 或 vtt_map_data');\n                }\n                let rawData;\n                // 优先从 URL 加载\n                if (mapConfig.vtt_map_url) {\n                    const response = await fetch(mapConfig.vtt_map_url);\n                    rawData = await response.json();\n                }\n                else {\n                    rawData = mapConfig.vtt_map_data;\n                }\n                // 验证和解析数据\n                const parsed = VTTMapSchema.parse(rawData);\n                mapData.value = parsed;\n                // 初始化地图状态管理\n                mapStateManager.value = useMapState(parsed.name);\n                // 如果状态中没有 Token,使用地图中的 Token（添加更多空值检查）\n                if (mapStateManager.value?.state?.value?.tokens &&\n                    mapStateManager.value.state.value.tokens.length === 0 &&\n                    parsed.tokens &&\n                    parsed.tokens.length > 0) {\n                    parsed.tokens.forEach(token => {\n                        mapStateManager.value?.addToken(token);\n                    });\n                }\n                toastr.success(`地图 \"${parsed.name}\" 加载成功`);\n            }\n            catch (err) {\n                error.value = err instanceof Error ? err.message : String(err);\n                toastr.error('地图加载失败: ' + error.value);\n            }\n            finally {\n                loading.value = false;\n            }\n        }\n        // Token 操作\n        function handleTokenMove(token, x, y) {\n            mapStateManager.value?.updateTokenPosition(token.id, x, y);\n        }\n        function handleTokenSelect(token) {\n            console.log('选中 Token:', token);\n        }\n        function addNewToken() {\n            if (!mapStateManager.value?.addToken || !mapData.value)\n                return;\n            const newToken = TokenSchema.parse({\n                id: `token_${Date.now()}`,\n                name: `Token ${currentTokens.value.length + 1}`,\n                x: mapData.value.width / 2,\n                y: mapData.value.height / 2,\n                width: 1,\n                height: 1,\n                vision: 12,\n            });\n            mapStateManager.value.addToken(newToken);\n            toastr.success(`添加了新的 Token: ${newToken.name}`);\n        }\n        function removeToken(tokenId) {\n            if (!mapStateManager.value?.removeToken)\n                return;\n            if (confirm('确定要删除这个 Token 吗?')) {\n                mapStateManager.value.removeToken(tokenId);\n                toastr.success('Token 已删除');\n            }\n        }\n        // 导出/导入状态\n        function exportState() {\n            if (!mapStateManager.value?.state?.value)\n                return;\n            const state = mapStateManager.value.state.value;\n            const json = JSON.stringify(state, null, 2);\n            // 复制到剪贴板\n            navigator.clipboard\n                .writeText(json)\n                .then(() => {\n                toastr.success('状态已复制到剪贴板');\n            })\n                .catch(() => {\n                // 降级方案: 显示在弹窗中\n                const blob = new Blob([json], { type: 'application/json' });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = `${mapData.value?.name}_state.json`;\n                a.click();\n                URL.revokeObjectURL(url);\n            });\n        }\n        function importState() {\n            const json = prompt('请粘贴地图状态 JSON:');\n            if (!json)\n                return;\n            try {\n                const state = JSON.parse(json);\n                replaceVariables({ [`vtt_map_${mapData.value?.name}`]: state }, { type: 'chat' });\n                toastr.success('状态导入成功,正在重新加载...');\n                setTimeout(() => location.reload(), 1000);\n            }\n            catch (err) {\n                toastr.error('导入失败: ' + (err instanceof Error ? err.message : String(err)));\n            }\n        }\n        onMounted(() => {\n            loadMap();\n        });\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n                (loading.value)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [...(_cache[7] || (_cache[7] = [\n                            _createElementVNode(\"div\", { class: \"spinner\" }, null, -1 /* CACHED */),\n                            _createElementVNode(\"p\", null, \"加载地图中...\", -1 /* CACHED */)\n                        ]))]))\n                    : (error.value)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                            _cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"❌ 加载失败\", -1 /* CACHED */)),\n                            _createElementVNode(\"pre\", null, _toDisplayString(error.value), 1 /* TEXT */),\n                            _createElementVNode(\"div\", _hoisted_4, [\n                                _createElementVNode(\"button\", { onClick: loadMap }, \"重试\"),\n                                _createElementVNode(\"button\", {\n                                    onClick: _cache[0] || (_cache[0] = ($event) => (showUploadDialog.value = true))\n                                }, \"📁 上传地图 JSON\"),\n                                _createElementVNode(\"button\", { onClick: loadExampleMap }, \"🎲 加载示例地图\")\n                            ])\n                        ]))\n                        : _createCommentVNode(\"v-if\", true),\n                _createCommentVNode(\" 上传对话框 \"),\n                (showUploadDialog.value)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                        _createElementVNode(\"div\", _hoisted_6, [\n                            _cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"上传地图 JSON 文件\", -1 /* CACHED */)),\n                            _createElementVNode(\"input\", {\n                                type: \"file\",\n                                accept: \".json\",\n                                onChange: handleFileUpload\n                            }, null, 32 /* NEED_HYDRATION */),\n                            _cache[10] || (_cache[10] = _createElementVNode(\"p\", { class: \"upload-hint\" }, \"或粘贴 JSON 内容:\", -1 /* CACHED */)),\n                            _withDirectives(_createElementVNode(\"textarea\", {\n                                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => ((jsonInput).value = $event)),\n                                placeholder: \"粘贴 VTT 地图 JSON...\",\n                                rows: \"10\"\n                            }, null, 512 /* NEED_PATCH */), [\n                                [_vModelText, jsonInput.value]\n                            ]),\n                            _createElementVNode(\"div\", _hoisted_7, [\n                                _createElementVNode(\"button\", { onClick: loadFromJSON }, \"加载\"),\n                                _createElementVNode(\"button\", {\n                                    onClick: _cache[2] || (_cache[2] = ($event) => (showUploadDialog.value = false))\n                                }, \"取消\")\n                            ])\n                        ])\n                    ]))\n                    : (mapData.value)\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 3 }, [\n                            _createCommentVNode(\" 顶部工具栏 \"),\n                            _createElementVNode(\"div\", _hoisted_8, [\n                                _createElementVNode(\"h2\", null, _toDisplayString(mapData.value.name), 1 /* TEXT */),\n                                _createElementVNode(\"div\", _hoisted_9, [\n                                    _createElementVNode(\"button\", {\n                                        onClick: _cache[3] || (_cache[3] = ($event) => (showTokenManager.value = !showTokenManager.value))\n                                    }, \"🎭 Token 管理\"),\n                                    _createElementVNode(\"button\", {\n                                        onClick: _cache[4] || (_cache[4] = ($event) => (showMapInfo.value = !showMapInfo.value))\n                                    }, \"ℹ️ 地图信息\"),\n                                    _createElementVNode(\"button\", { onClick: exportState }, \"💾 导出状态\"),\n                                    _createElementVNode(\"button\", { onClick: importState }, \"📁 导入状态\")\n                                ])\n                            ]),\n                            _createCommentVNode(\" 地图画布 \"),\n                            _createElementVNode(\"div\", _hoisted_10, [\n                                _createVNode(MapCanvas, {\n                                    \"map-data\": mapData.value,\n                                    tokens: currentTokens.value,\n                                    onTokenMove: handleTokenMove,\n                                    onTokenSelect: handleTokenSelect\n                                }, null, 8 /* PROPS */, [\"map-data\", \"tokens\"])\n                            ]),\n                            _createCommentVNode(\" Token 管理面板 \"),\n                            (showTokenManager.value)\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                                    _createElementVNode(\"div\", _hoisted_12, [\n                                        _cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"Token 管理\", -1 /* CACHED */)),\n                                        _createElementVNode(\"button\", {\n                                            onClick: _cache[5] || (_cache[5] = ($event) => (showTokenManager.value = false))\n                                        }, \"✖\")\n                                    ]),\n                                    _createElementVNode(\"div\", _hoisted_13, [\n                                        _createElementVNode(\"button\", {\n                                            onClick: addNewToken,\n                                            class: \"add-token-btn\"\n                                        }, \"➕ 添加 Token\"),\n                                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(currentTokens.value, (token) => {\n                                            return (_openBlock(), _createElementBlock(\"div\", {\n                                                key: token.id,\n                                                class: \"token-item\"\n                                            }, [\n                                                _createElementVNode(\"div\", _hoisted_14, [\n                                                    _createElementVNode(\"strong\", null, _toDisplayString(token.name), 1 /* TEXT */),\n                                                    _createElementVNode(\"button\", {\n                                                        onClick: ($event) => (removeToken(token.id)),\n                                                        class: \"delete-btn\"\n                                                    }, \"🗑️\", 8 /* PROPS */, _hoisted_15)\n                                                ]),\n                                                _createElementVNode(\"div\", _hoisted_16, [\n                                                    _createElementVNode(\"label\", null, [\n                                                        _cache[12] || (_cache[12] = _createTextVNode(\" 名称: \", -1 /* CACHED */)),\n                                                        _withDirectives(_createElementVNode(\"input\", {\n                                                            \"onUpdate:modelValue\": ($event) => ((token.name) = $event),\n                                                            type: \"text\"\n                                                        }, null, 8 /* PROPS */, _hoisted_17), [\n                                                            [_vModelText, token.name]\n                                                        ])\n                                                    ]),\n                                                    _createElementVNode(\"label\", null, [\n                                                        _cache[13] || (_cache[13] = _createTextVNode(\" X: \", -1 /* CACHED */)),\n                                                        _withDirectives(_createElementVNode(\"input\", {\n                                                            \"onUpdate:modelValue\": ($event) => ((token.x) = $event),\n                                                            type: \"number\",\n                                                            step: \"10\"\n                                                        }, null, 8 /* PROPS */, _hoisted_18), [\n                                                            [\n                                                                _vModelText,\n                                                                token.x,\n                                                                void 0,\n                                                                { number: true }\n                                                            ]\n                                                        ])\n                                                    ]),\n                                                    _createElementVNode(\"label\", null, [\n                                                        _cache[14] || (_cache[14] = _createTextVNode(\" Y: \", -1 /* CACHED */)),\n                                                        _withDirectives(_createElementVNode(\"input\", {\n                                                            \"onUpdate:modelValue\": ($event) => ((token.y) = $event),\n                                                            type: \"number\",\n                                                            step: \"10\"\n                                                        }, null, 8 /* PROPS */, _hoisted_19), [\n                                                            [\n                                                                _vModelText,\n                                                                token.y,\n                                                                void 0,\n                                                                { number: true }\n                                                            ]\n                                                        ])\n                                                    ]),\n                                                    _createElementVNode(\"label\", null, [\n                                                        _cache[15] || (_cache[15] = _createTextVNode(\" 视野范围: \", -1 /* CACHED */)),\n                                                        _withDirectives(_createElementVNode(\"input\", {\n                                                            \"onUpdate:modelValue\": ($event) => ((token.vision) = $event),\n                                                            type: \"number\",\n                                                            min: \"0\",\n                                                            max: \"100\"\n                                                        }, null, 8 /* PROPS */, _hoisted_20), [\n                                                            [\n                                                                _vModelText,\n                                                                token.vision,\n                                                                void 0,\n                                                                { number: true }\n                                                            ]\n                                                        ])\n                                                    ]),\n                                                    _createElementVNode(\"label\", null, [\n                                                        _cache[16] || (_cache[16] = _createTextVNode(\" 尺寸: \", -1 /* CACHED */)),\n                                                        _withDirectives(_createElementVNode(\"input\", {\n                                                            \"onUpdate:modelValue\": ($event) => ((token.width) = $event),\n                                                            type: \"number\",\n                                                            min: \"1\",\n                                                            max: \"10\"\n                                                        }, null, 8 /* PROPS */, _hoisted_21), [\n                                                            [\n                                                                _vModelText,\n                                                                token.width,\n                                                                void 0,\n                                                                { number: true }\n                                                            ]\n                                                        ])\n                                                    ])\n                                                ])\n                                            ]));\n                                        }), 128 /* KEYED_FRAGMENT */))\n                                    ])\n                                ]))\n                                : _createCommentVNode(\"v-if\", true),\n                            _createCommentVNode(\" 地图信息面板 \"),\n                            (showMapInfo.value)\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n                                    _createElementVNode(\"div\", _hoisted_23, [\n                                        _cache[17] || (_cache[17] = _createElementVNode(\"h3\", null, \"地图信息\", -1 /* CACHED */)),\n                                        _createElementVNode(\"button\", {\n                                            onClick: _cache[6] || (_cache[6] = ($event) => (showMapInfo.value = false))\n                                        }, \"✖\")\n                                    ]),\n                                    _createElementVNode(\"div\", _hoisted_24, [\n                                        _createElementVNode(\"div\", _hoisted_25, [\n                                            _cache[18] || (_cache[18] = _createElementVNode(\"label\", null, \"地图名称:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString(mapData.value.name), 1 /* TEXT */)\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_26, [\n                                            _cache[19] || (_cache[19] = _createElementVNode(\"label\", null, \"尺寸:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString(mapData.value.width) + \" × \" + _toDisplayString(mapData.value.height) + \" px\", 1 /* TEXT */)\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_27, [\n                                            _cache[20] || (_cache[20] = _createElementVNode(\"label\", null, \"网格:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString(mapData.value.grid) + \" px (\" + _toDisplayString(mapData.value.gridDistance) + \" \" + _toDisplayString(mapData.value.gridUnits) + \")\", 1 /* TEXT */)\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_28, [\n                                            _cache[21] || (_cache[21] = _createElementVNode(\"label\", null, \"光源数量:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString(mapData.value.lights.length), 1 /* TEXT */)\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_29, [\n                                            _cache[22] || (_cache[22] = _createElementVNode(\"label\", null, \"墙壁数量:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString(mapData.value.walls.length), 1 /* TEXT */)\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_30, [\n                                            _cache[23] || (_cache[23] = _createElementVNode(\"label\", null, \"全局光照:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString(mapData.value.globalLight ? '是' : '否'), 1 /* TEXT */)\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_31, [\n                                            _cache[24] || (_cache[24] = _createElementVNode(\"label\", null, \"黑暗等级:\", -1 /* CACHED */)),\n                                            _createElementVNode(\"span\", null, _toDisplayString((mapData.value.darkness * 100).toFixed(0)) + \"%\", 1 /* TEXT */)\n                                        ])\n                                    ])\n                                ]))\n                                : _createCommentVNode(\"v-if\", true)\n                        ], 64 /* STABLE_FRAGMENT */))\n                        : _createCommentVNode(\"v-if\", true)\n            ]));\n        };\n    }\n});\n","/* unplugin-vue-components disabled */import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7ec8e3e4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.2_96d39c74a8c06e57a334244d199e36ff/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7ec8e3e4\"]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\n\n// 检测是否在酒馆环境中运行\nconst isInTavern = typeof window !== 'undefined' && typeof (window as any).getScriptId === 'function';\n\n// 如果不在酒馆环境中,提供 mock 实现\nif (!isInTavern) {\n  // Mock jQuery\n  if (typeof (window as any).$ === 'undefined') {\n    // 简单的 jQuery mock,仅用于 DOMContentLoaded\n    (window as any).$ = (fn: any) => {\n      if (typeof fn === 'function') {\n        if (document.readyState === 'loading') {\n          document.addEventListener('DOMContentLoaded', fn);\n        } else {\n          fn();\n        }\n      }\n      return { on: () => {} };\n    };\n    (window as any).$.fn = {};\n  }\n\n  // Mock toastr\n  if (typeof (window as any).toastr === 'undefined') {\n    (window as any).toastr = {\n      success: (msg: string) => console.log('[Success]', msg),\n      error: (msg: string) => console.error('[Error]', msg),\n      info: (msg: string) => console.info('[Info]', msg),\n      warning: (msg: string) => console.warn('[Warning]', msg),\n    };\n  }\n\n  // Mock 酒馆 API\n  if (typeof (window as any).getScriptId === 'undefined') {\n    (window as any).getScriptId = () => 'standalone-vtt-viewer';\n    (window as any).getVariables = (options?: any) => {\n      const key = options?.type === 'script' ? 'vtt_script_vars' : 'vtt_chat_vars';\n      const stored = localStorage.getItem(key);\n      return stored ? JSON.parse(stored) : {};\n    };\n    (window as any).replaceVariables = (vars: any, options?: any) => {\n      const key = options?.type === 'script' ? 'vtt_script_vars' : 'vtt_chat_vars';\n      const current = (window as any).getVariables(options);\n      const merged = { ...current, ...vars };\n      localStorage.setItem(key, JSON.stringify(merged));\n    };\n  }\n}\n\nconst $ = (window as any).$;\nconst toastr = (window as any).toastr;\n\n// 等待 DOM 加载完成\n$(() => {\n  const app = createApp(App);\n\n  app.mount('#app');\n\n  toastr.success('VTT 地图查看器已加载');\n});\n\n// 卸载时清理\n$(window).on('pagehide', () => {\n  toastr.info('VTT 地图查看器已卸载');\n});\n"],"names":["exports","sfc","props","target","__vccOpts","key","val","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Vue","PIXI","QuadTree","bounds","capacity","walls","divided","northeast","northwest","southeast","southwest","constructor","this","insert","wall","intersects","length","push","subdivide","inserted","query","range","found","depth","debugPrefix","repeat","boundsIntersect","console","log","x","y","width","height","wallIntersectsRange","w","h","x1","y1","x2","y2","c","wallMinX","Math","min","wallMaxX","max","wallMinY","wallMaxY","b","clear","getStats","nodes","maxDepth","neStats","nwStats","seStats","swStats","aabbIntersect","wx1","wy1","wx2","wy2","moveMinX","moveMaxX","moveMinY","moveMaxY","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","__name","mapData","tokens","emits","setup","__props","emit","__emit","containerRef","ref","canvasRef","showGrid","fogEnabled","fogOfWar","enabled","lightingEnabled","globalLight","foregroundVisible","selectedToken","showDoorPanel","doors","computed","filter","door","app","backgroundSprite","foregroundSprite","gridGraphics","wallsGraphics","lightsContainer","tokensContainer","fogLayer","isAnyTokenDragging","isSpaceKeyPressed","visionPolygonCache","Map","fogCanvas","fogSprite","fogTexture","fogNeedsUpdate","viewport","scale","isLineBlocked","isMovementBlocked","isTokenOnWall","calculateFOVShadowCasting","getKeyAngles","buildQuadTree","castRay","castRayFromFOV","shouldBlockVision","wallQuadTree","cachedWalls","sense","ds","lineSegmentsIntersect","x3","y3","x4","y4","denom","abs","ua","ub","epsilon","pointToLineSegmentDistance","px","py","dx","dy","lengthSquared","sqrt","t","projX","projY","circlePathIntersectsWall","radius","wallX1","wallY1","wallX2","wallY2","effectiveRadius","moveDistance","steps","ceil","i","castLight","cx","cy","row","startSlope","endSlope","xx","xy","yx","yy","gridSize","visible","nextStartSlope","blocked","l_slope","r_slope","add","isGridBlocked","gridX","gridY","minX","maxX","minY","maxY","mapBounds","quadTree","insertedCount","stats","testQuery","slice","map","rayWallIntersection","tokenRadius","queryMargin","queryBounds","nearbyWalls","move","checkWalls","floor","manualCount","dist","calculateVisibleArea","token","visionRange","vision","angleStep","PI","angle","cos","sin","some","v","centerX","centerY","Set","gridCenterX","gridCenterY","directions","angles","round","atan2","midX","midY","angleMid","size","Array","from","sort","startX","startY","maxDistance","endX","endY","closestDist","closestX","closestY","margin","intersection","pullbackDistance","ratio","useFOV","drawGrid","value","grid","gridColor","gridAlpha","lineStyle","parseInt","replace","moveTo","lineTo","stroke","drawWalls","doorCount","windowCount","normalCount","color","alpha","drawLights","removeChildren","lights","light","lightGraphics","dimRadius","dim","brightRadius","bright","tintColor","circle","fill","tintAlpha","addChild","to","duration","random","yoyo","ease","drawTokens","tokenGraphics","text","name","style","fontSize","fontWeight","anchor","set","eventMode","cursor","hitArea","dragging","dragStartPos","lastValidPos","on","event","stopPropagation","globalPos","global","localPos","stage","toLocal","updateFog","deltaX","deltaY","newX","newY","startTime","performance","now","children","includes","removeChild","destroy","ctx","getContext","clearRect","fillStyle","fillRect","globalCompositeOperation","visionPolygon","createVisionPolygon","beginPath","closePath","endTime","toFixed","cacheKey","id","keyAngles","points","ray","polygon","lastX","lastY","point","firstKey","keys","next","delete","result","openAllDoors","count","toastr","success","info","closeAllDoors","autoFitMap","containerWidth","clientWidth","containerHeight","clientHeight","mapWidth","mapHeight","scaleX","scaleY","scaledWidth","scaledHeight","zoomIn","zoomOut","resetView","toggleGrid","toggleFog","toggleLighting","toggleForeground","onMounted","async","init","canvas","backgroundColor","antialias","backgroundLayer","gridLayer","wallsLayer","foregroundLayer","img","texture","load","foreground","document","createElement","lastPos","window","addEventListener","code","globalX","globalY","preventDefault","zoomFactor","newScale","setupInteraction","resizeObserver","ResizeObserver","renderer","resize","observe","onUnmounted","disconnect","watch","deep","_ctx","_cache","ref_key","onClick","title","$event","index","_","z","LightSchema","object","number","default","string","animation","type","optional","speed","intensity","WallSchema","tuple","union","literal","sound","TokenSchema","dimVision","rotation","hidden","boolean","elevation","VTTMapSchema","positive","shiftX","shiftY","gridDistance","gridUnits","padding","darkness","nullable","array","explored","MapStateSchema","mapId","fogExplored","useMapState","saveState","state","cleanState","replaceVariables","error","saved","getVariables","data","parse","warn","loadState","debouncedSave","newState","updateTokenPosition","tokenId","find","addToken","removeToken","findIndex","splice","updateViewport","markExplored","isExplored","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","loading","showTokenManager","showMapInfo","showUploadDialog","jsonInput","mapStateManager","currentTokens","mapTokens","stateTokens","loadExampleMap","exampleMap","parsed","forEach","e","Error","message","String","handleFileUpload","file","files","reader","FileReader","onload","loadFromJSON","readAsText","JSON","mapKey","chatVars","variables","script_id","getScriptId","vtt_map_data","stack","loadMap","mapConfig","vtt_map_url","rawData","response","fetch","json","err","handleTokenMove","handleTokenSelect","addNewToken","newToken","Date","exportState","stringify","navigator","clipboard","writeText","then","catch","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","importState","prompt","setTimeout","location","reload","accept","onChange","placeholder","rows","onTokenMove","onTokenSelect","confirm","step","$","fn","readyState","msg","warning","options","stored","localStorage","getItem","vars","merged","setItem","createApp","App","mount"],"sourceRoot":""}
