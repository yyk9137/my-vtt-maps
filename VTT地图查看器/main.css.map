{"version":3,"file":"main.css","mappings":"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","sources":["src://tavern_helper_template/src/VTTÂú∞ÂõæÊü•ÁúãÂô®/components/MapCanvas-V4.vue","src://tavern_helper_template/src/VTTÂú∞ÂõæÊü•ÁúãÂô®/App.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-canvas-container\" ref=\"containerRef\">\r\n    <canvas ref=\"canvasRef\"></canvas>\r\n\r\n    <!-- ÊéßÂà∂Èù¢Êùø -->\r\n    <div class=\"map-controls\">\r\n      <button @click=\"zoomIn\" title=\"ÊîæÂ§ß\">\r\n        <span>üîç+</span>\r\n      </button>\r\n      <button @click=\"zoomOut\" title=\"Áº©Â∞è\">\r\n        <span>üîç-</span>\r\n      </button>\r\n      <button @click=\"resetView\" title=\"ÈáçÁΩÆËßÜÂõæ\">\r\n        <span>üè†</span>\r\n      </button>\r\n      <button @click=\"toggleGrid\" title=\"ÊòæÁ§∫/ÈöêËóèÁΩëÊ†º\">\r\n        <span>{{ showGrid ? '‚äû' : '‚äü' }}</span>\r\n      </button>\r\n      <button @click=\"toggleFog\" title=\"Êàò‰∫âËø∑Èõæ\">\r\n        <span>{{ fogEnabled ? 'üå´Ô∏è' : '‚òÄÔ∏è' }}</span>\r\n      </button>\r\n      <button @click=\"toggleLighting\" title=\"ÂÖâÁÖßÁ≥ªÁªü\">\r\n        <span>{{ lightingEnabled ? 'üí°' : 'üî¶' }}</span>\r\n      </button>\r\n      <button @click=\"toggleForeground\" title=\"ÊòæÁ§∫/ÈöêËóèÂâçÊôØÂ±Ç\" v-if=\"props.mapData.foreground\">\r\n        <span>{{ foregroundVisible ? 'üè†' : 'üèöÔ∏è' }}</span>\r\n      </button>\r\n      <button @click=\"showDoorPanel = !showDoorPanel\" title=\"Èó®ÊéßÂà∂Èù¢Êùø\" v-if=\"doors.length > 0\">\r\n        <span>{{ showDoorPanel ? 'üö™' : 'üöß' }}</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- üÜï Èó®ÊéßÂà∂Èù¢Êùø -->\r\n    <div v-if=\"showDoorPanel && doors.length > 0\" class=\"door-panel\">\r\n      <div class=\"panel-header\">\r\n        <h3>üö™ Èó®ÊéßÂà∂ ({{ doors.length }})</h3>\r\n        <button @click=\"showDoorPanel = false\">‚úñ</button>\r\n      </div>\r\n      <div class=\"panel-content\">\r\n        <div class=\"panel-actions\">\r\n          <button @click=\"openAllDoors\" class=\"batch-btn\">üîì ÂÖ®ÈÉ®ÂºÄÈó®</button>\r\n          <button @click=\"closeAllDoors\" class=\"batch-btn\">üîí ÂÖ®ÈÉ®ÂÖ≥Èó®</button>\r\n        </div>\r\n        <div v-for=\"(door, index) in doors\" :key=\"index\" class=\"door-item\">\r\n          <div class=\"door-info\">\r\n            <span class=\"door-name\">Èó® {{ index + 1 }}</span>\r\n            <span class=\"door-position\">({{ Math.floor(door.c[0]) }}, {{ Math.floor(door.c[1]) }})</span>\r\n          </div>\r\n          <button @click=\"toggleDoor(door)\" :class=\"['door-toggle', door.ds === 1 ? 'open' : 'closed']\">\r\n            {{ door.ds === 1 ? 'üîì ÂºÄÈó®' : 'üîí ÂÖ≥Èó®' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Token ‰ø°ÊÅØÈù¢Êùø -->\r\n    <div v-if=\"selectedToken\" class=\"token-info\">\r\n      <h3>{{ selectedToken.name }}</h3>\r\n      <p>‰ΩçÁΩÆ: ({{ Math.floor(selectedToken.x) }}, {{ Math.floor(selectedToken.y) }})</p>\r\n      <p>ËßÜÈáé: {{ selectedToken.vision }} Ê†º</p>\r\n      <button @click=\"selectedToken = null\">ÂÖ≥Èó≠</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { gsap } from 'gsap';\r\nimport * as PIXI from 'pixi.js';\r\nimport { computed, onMounted, onUnmounted, ref, watch } from 'vue';\r\nimport { useFOV } from '../composables/useFOV';\r\nimport type { Token, VTTMap, Wall } from '../types';\r\n\r\nconst props = defineProps<{\r\n  mapData: VTTMap;\r\n  tokens?: Token[];\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n  tokenMove: [token: Token, x: number, y: number];\r\n  tokenSelect: [token: Token | null];\r\n}>();\r\n\r\nconst containerRef = ref<HTMLDivElement>();\r\nconst canvasRef = ref<HTMLCanvasElement>();\r\nconst showGrid = ref(true);\r\nconst fogEnabled = ref(props.mapData.fogOfWar.enabled);\r\nconst lightingEnabled = ref(!props.mapData.globalLight);\r\nconst foregroundVisible = ref(true);\r\nconst selectedToken = ref<Token | null>(null);\r\n\r\n// üÜï Èó®ÊéßÂà∂Èù¢ÊùøÁä∂ÊÄÅ\r\nconst showDoorPanel = ref(false);\r\n\r\n// üÜï ËÆ°ÁÆóÊâÄÊúâÈó®ÁöÑÂàóË°®\r\nconst doors = computed(() => {\r\n  return props.mapData.walls.filter(wall => wall.door === 1);\r\n});\r\n\r\nlet app: PIXI.Application | null = null;\r\nlet backgroundSprite: PIXI.Sprite | null = null;\r\nlet foregroundSprite: PIXI.Sprite | null = null;\r\nlet gridGraphics: PIXI.Graphics | null = null;\r\nlet wallsGraphics: PIXI.Graphics | null = null;\r\nlet lightsContainer: PIXI.Container | null = null;\r\nlet tokensContainer: PIXI.Container | null = null;\r\nlet fogLayer: PIXI.Container | null = null;\r\n\r\nlet isAnyTokenDragging = false;\r\nlet isSpaceKeyPressed = false;\r\n\r\nconst visionPolygonCache = new Map<string, number[]>();\r\n\r\nlet fogCanvas: HTMLCanvasElement | null = null;\r\nlet fogSprite: PIXI.Sprite | null = null;\r\nlet fogTexture: PIXI.Texture | null = null;\r\n\r\nlet fogNeedsUpdate = true;\r\n\r\nconst viewport = ref({\r\n  x: 0,\r\n  y: 0,\r\n  scale: 1,\r\n});\r\n\r\nconst {\r\n  isLineBlocked,\r\n  isMovementBlocked,\r\n  isTokenOnWall,\r\n  calculateFOVShadowCasting,\r\n  getKeyAngles,\r\n  buildQuadTree,\r\n  castRay: castRayFromFOV,\r\n  shouldBlockVision,\r\n} = useFOV();\r\n\r\nconst mapBounds = computed(() => ({\r\n  x: 0,\r\n  y: 0,\r\n  width: props.mapData.width,\r\n  height: props.mapData.height,\r\n}));\r\n\r\nonMounted(async () => {\r\n  if (!containerRef.value || !canvasRef.value) return;\r\n\r\n  app = new PIXI.Application();\r\n  await app.init({\r\n    canvas: canvasRef.value,\r\n    width: containerRef.value.clientWidth,\r\n    height: containerRef.value.clientHeight,\r\n    backgroundColor: props.mapData.backgroundColor || '#1a1a1a',\r\n    antialias: true,\r\n  });\r\n\r\n  const backgroundLayer = new PIXI.Container();\r\n  const gridLayer = new PIXI.Container();\r\n  const wallsLayer = new PIXI.Container();\r\n  lightsContainer = new PIXI.Container();\r\n  tokensContainer = new PIXI.Container();\r\n  const foregroundLayer = new PIXI.Container();\r\n  fogLayer = new PIXI.Container();\r\n\r\n  foregroundLayer.eventMode = 'none';\r\n  fogLayer.eventMode = 'none';\r\n\r\n  app.stage.addChild(backgroundLayer);\r\n  app.stage.addChild(gridLayer);\r\n  app.stage.addChild(wallsLayer);\r\n  app.stage.addChild(lightsContainer);\r\n  app.stage.addChild(tokensContainer);\r\n  app.stage.addChild(foregroundLayer);\r\n  app.stage.addChild(fogLayer);\r\n\r\n  if (props.mapData.img) {\r\n    const texture = await PIXI.Assets.load(props.mapData.img);\r\n    backgroundSprite = new PIXI.Sprite(texture);\r\n    backgroundSprite.width = props.mapData.width;\r\n    backgroundSprite.height = props.mapData.height;\r\n    backgroundLayer.addChild(backgroundSprite);\r\n  }\r\n\r\n  if (props.mapData.foreground) {\r\n    const texture = await PIXI.Assets.load(props.mapData.foreground);\r\n    foregroundSprite = new PIXI.Sprite(texture);\r\n    foregroundSprite.width = props.mapData.width;\r\n    foregroundSprite.height = props.mapData.height;\r\n    foregroundLayer.addChild(foregroundSprite);\r\n    toastr.info('Â∑≤Âä†ËΩΩÂâçÊôØÂ±Ç (ÈÅÆÊå°Áâ©)');\r\n  }\r\n\r\n  gridGraphics = new PIXI.Graphics();\r\n  gridLayer.addChild(gridGraphics);\r\n  drawGrid();\r\n\r\n  wallsGraphics = new PIXI.Graphics();\r\n  wallsLayer.addChild(wallsGraphics);\r\n  drawWalls();\r\n\r\n  console.log('üå≥ Ê≠£Âú®ÊûÑÂª∫ÂõõÂèâÊ†ëÁ©∫Èó¥ÂàÜÂå∫...');\r\n  buildQuadTree(props.mapData.walls, mapBounds.value);\r\n  console.log('‚úÖ ÂõõÂèâÊ†ëÊûÑÂª∫ÂÆåÊàê,Á¢∞ÊíûÊ£ÄÊµãÊÄßËÉΩÂ∑≤‰ºòÂåñ!');\r\n\r\n  drawLights();\r\n  drawTokens();\r\n\r\n  fogCanvas = document.createElement('canvas');\r\n  fogCanvas.width = props.mapData.width;\r\n  fogCanvas.height = props.mapData.height;\r\n\r\n  if (fogEnabled.value) {\r\n    fogNeedsUpdate = true;\r\n    updateFog();\r\n  }\r\n\r\n  setupInteraction();\r\n  autoFitMap();\r\n\r\n  const resizeObserver = new ResizeObserver(() => {\r\n    if (app && containerRef.value) {\r\n      app.renderer.resize(containerRef.value.clientWidth, containerRef.value.clientHeight);\r\n    }\r\n  });\r\n  resizeObserver.observe(containerRef.value);\r\n\r\n  onUnmounted(() => {\r\n    resizeObserver.disconnect();\r\n  });\r\n});\r\n\r\nfunction drawGrid() {\r\n  if (!gridGraphics) return;\r\n  gridGraphics.clear();\r\n  if (!showGrid.value) return;\r\n\r\n  const { width, height, grid, gridColor, gridAlpha } = props.mapData;\r\n  gridGraphics.lineStyle(1, parseInt(gridColor.replace('#', '0x')), gridAlpha);\r\n\r\n  for (let x = 0; x <= width; x += grid) {\r\n    gridGraphics.moveTo(x, 0);\r\n    gridGraphics.lineTo(x, height);\r\n  }\r\n\r\n  for (let y = 0; y <= height; y += grid) {\r\n    gridGraphics.moveTo(0, y);\r\n    gridGraphics.lineTo(width, y);\r\n  }\r\n\r\n  gridGraphics.stroke();\r\n}\r\n\r\n// üîß ‰øÆÊîπÔºöÊ†πÊçÆÈó®ÁöÑÁä∂ÊÄÅÊòæÁ§∫‰∏çÂêåÈ¢úËâ≤\r\nfunction drawWalls() {\r\n  if (!wallsGraphics) return;\r\n  wallsGraphics.clear();\r\n\r\n  console.log(`üß± ÁªòÂà∂ ${props.mapData.walls.length} ÈÅìÂ¢ôÂ£Å`);\r\n\r\n  let doorCount = 0;\r\n  let windowCount = 0;\r\n  let normalCount = 0;\r\n\r\n  for (const wall of props.mapData.walls) {\r\n    const [x1, y1, x2, y2] = wall.c;\r\n\r\n    let color = 0xffffff;\r\n    let alpha = 1.0;\r\n    let width = 10;\r\n\r\n    if (wall.door === 1) {\r\n      // üÜï Èó® - Ê†πÊçÆÂºÄÂÖ≥Áä∂ÊÄÅÊòæÁ§∫‰∏çÂêåÈ¢úËâ≤\r\n      if (wall.ds === 1) {\r\n        // ÂºÄÈó® - ÊµÖÊ£ïËâ≤ÔºåÁªÜÁ∫øÔºåÂçäÈÄèÊòé\r\n        color = 0xd2b48c;\r\n        width = 8;\r\n        alpha = 0.6;\r\n      } else {\r\n        // ÂÖ≥Èó® - Ê∑±Ê£ïËâ≤ÔºåÁ≤óÁ∫øÔºå‰∏çÈÄèÊòé\r\n        color = 0x8b4513;\r\n        width = 15;\r\n        alpha = 1.0;\r\n      }\r\n      doorCount++;\r\n    } else if (wall.door === 2) {\r\n      color = 0x9370db;\r\n      alpha = 0.8;\r\n      width = 10;\r\n    } else if (wall.sense === 0) {\r\n      color = 0x4169e1;\r\n      alpha = 0.7;\r\n      width = 8;\r\n      windowCount++;\r\n    } else {\r\n      normalCount++;\r\n    }\r\n\r\n    wallsGraphics.lineStyle(width, color, alpha);\r\n    wallsGraphics.moveTo(x1, y1);\r\n    wallsGraphics.lineTo(x2, y2);\r\n    wallsGraphics.stroke();\r\n  }\r\n\r\n  console.log(`  - ÊôÆÈÄöÂ¢ô: ${normalCount} ÈÅìÔºàÁôΩËâ≤Ôºâ`);\r\n  console.log(`  - Èó®: ${doorCount} ÈÅìÔºàÊ£ïËâ≤Ôºâ`);\r\n  console.log(`  - Á™óÊà∑: ${windowCount} ÈÅìÔºàËìùËâ≤Ôºâ`);\r\n}\r\n\r\nfunction drawLights() {\r\n  if (!lightsContainer) return;\r\n  lightsContainer.removeChildren();\r\n\r\n  if (!lightingEnabled.value) {\r\n    console.log('üí° ÂÖâÁÖßÁ≥ªÁªüÂ∑≤ÂÖ≥Èó≠');\r\n    return;\r\n  }\r\n\r\n  console.log(`üí° ÁªòÂà∂ ${props.mapData.lights.length} ‰∏™ÂÖâÊ∫ê`);\r\n\r\n  for (const light of props.mapData.lights) {\r\n    const lightGraphics = new PIXI.Graphics();\r\n    const dimRadius = light.dim * props.mapData.grid;\r\n    const brightRadius = light.bright * props.mapData.grid;\r\n    const color = parseInt(light.tintColor.replace('#', '0x'));\r\n\r\n    if (dimRadius > 0) {\r\n      lightGraphics.circle(light.x, light.y, dimRadius);\r\n      lightGraphics.fill({ color, alpha: light.tintAlpha * 0.4 });\r\n    }\r\n\r\n    if (brightRadius > 0) {\r\n      lightGraphics.circle(light.x, light.y, brightRadius);\r\n      lightGraphics.fill({ color, alpha: light.tintAlpha * 0.8 });\r\n    }\r\n\r\n    lightGraphics.circle(light.x, light.y, 30);\r\n    lightGraphics.fill({ color: 0xffff00, alpha: 1.0 });\r\n\r\n    lightGraphics.circle(light.x, light.y, 50);\r\n    lightGraphics.stroke({ width: 5, color: 0xffffff, alpha: 0.8 });\r\n\r\n    lightsContainer.addChild(lightGraphics);\r\n\r\n    gsap.to(lightGraphics, {\r\n      alpha: 0.8,\r\n      duration: 1 + Math.random(),\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: 'power1.inOut',\r\n    });\r\n  }\r\n\r\n  console.log(`  - Á¨¨‰∏Ä‰∏™ÂÖâÊ∫ê‰ΩçÁΩÆ: (${props.mapData.lights[0].x}, ${props.mapData.lights[0].y})`);\r\n  console.log(`  - tintAlpha: ${props.mapData.lights[0].tintAlpha}`);\r\n}\r\n\r\nfunction drawTokens() {\r\n  if (!tokensContainer) return;\r\n  tokensContainer.removeChildren();\r\n\r\n  const tokens = props.tokens || props.mapData.tokens || [];\r\n  console.log(`üéÆ ÁªòÂà∂ ${tokens.length} ‰∏™ Token`);\r\n\r\n  for (const token of tokens) {\r\n    const tokenGraphics = new PIXI.Graphics();\r\n    const size = token.width * props.mapData.grid;\r\n    const x = token.x;\r\n    const y = token.y;\r\n\r\n    tokenGraphics.circle(x, y, size / 2);\r\n    tokenGraphics.fill({ color: 0x00ff00, alpha: 0.8 });\r\n    tokenGraphics.stroke({ width: 8, color: 0xffffff });\r\n\r\n    tokenGraphics.circle(x, y, size / 2 + 15);\r\n    tokenGraphics.stroke({ width: 4, color: 0xffff00, alpha: 0.8 });\r\n\r\n    const text = new PIXI.Text({\r\n      text: token.name,\r\n      style: {\r\n        fontSize: 32,\r\n        fill: 0xffffff,\r\n        stroke: { color: 0x000000, width: 4 },\r\n        fontWeight: 'bold',\r\n      },\r\n    });\r\n    text.anchor.set(0.5);\r\n    text.x = x;\r\n    text.y = y + size / 2 + 40;\r\n    tokenGraphics.addChild(text);\r\n\r\n    console.log(`  - Token \"${token.name}\" ‰ΩçÁΩÆ: (${x}, ${y}), Â§ßÂ∞è: ${size}px`);\r\n\r\n    tokenGraphics.eventMode = 'dynamic';\r\n    tokenGraphics.cursor = 'pointer';\r\n    tokenGraphics.hitArea = new PIXI.Circle(x, y, size / 2 + 20);\r\n\r\n    let dragging = false;\r\n    let dragStartPos: { x: number; y: number } | null = null;\r\n    let lastValidPos = { x, y };\r\n\r\n    tokenGraphics.on('pointerdown', event => {\r\n      event.stopPropagation();\r\n      dragging = true;\r\n      isAnyTokenDragging = true;\r\n\r\n      const globalPos = event.global;\r\n      const localPos = app!.stage.toLocal(globalPos);\r\n      dragStartPos = { x: localPos.x, y: localPos.y };\r\n      lastValidPos = { x: token.x, y: token.y };\r\n\r\n      selectedToken.value = token;\r\n      emit('tokenSelect', token);\r\n      tokenGraphics.cursor = 'grabbing';\r\n    });\r\n\r\n    tokenGraphics.on('pointerup', event => {\r\n      if (dragging) {\r\n        event.stopPropagation();\r\n        console.log(`üñ±Ô∏è ÂÅúÊ≠¢ÊãñÂä®: ${token.name}`);\r\n        tokenGraphics.cursor = 'grab';\r\n        emit('tokenMove', token, token.x, token.y);\r\n\r\n        if (fogEnabled.value) {\r\n          fogNeedsUpdate = true;\r\n          updateFog();\r\n        }\r\n      }\r\n      dragging = false;\r\n      isAnyTokenDragging = false;\r\n      dragStartPos = null;\r\n    });\r\n\r\n    tokenGraphics.on('pointermove', event => {\r\n      if (dragging && dragStartPos) {\r\n        event.stopPropagation();\r\n\r\n        const globalPos = event.global;\r\n        const localPos = app!.stage.toLocal(globalPos);\r\n        const deltaX = localPos.x - dragStartPos.x;\r\n        const deltaY = localPos.y - dragStartPos.y;\r\n\r\n        const newX = lastValidPos.x + deltaX;\r\n        const newY = lastValidPos.y + deltaY;\r\n\r\n        const tokenRadius = (token.width * props.mapData.grid) / 2;\r\n        const canMove = !isMovementBlocked(\r\n          token.x,\r\n          token.y,\r\n          newX,\r\n          newY,\r\n          props.mapData.walls,\r\n          tokenRadius,\r\n          mapBounds.value,\r\n        );\r\n\r\n        if (!canMove) {\r\n          return;\r\n        }\r\n\r\n        tokenGraphics.x = newX - x;\r\n        tokenGraphics.y = newY - y;\r\n        token.x = newX;\r\n        token.y = newY;\r\n      }\r\n    });\r\n\r\n    tokenGraphics.on('pointerover', () => {\r\n      if (!dragging) {\r\n        tokenGraphics.cursor = 'grab';\r\n      }\r\n    });\r\n\r\n    tokenGraphics.on('pointerout', () => {\r\n      if (!dragging) {\r\n        tokenGraphics.cursor = 'pointer';\r\n      }\r\n    });\r\n\r\n    tokensContainer.addChild(tokenGraphics);\r\n  }\r\n}\r\n\r\nfunction updateFog() {\r\n  if (!fogCanvas || !fogLayer) return;\r\n\r\n  if (!fogNeedsUpdate) {\r\n    console.log(`üëÅÔ∏è Êàò‰∫âËø∑ÈõæÊó†ÈúÄÊõ¥Êñ∞Ôºà‰ΩøÁî®ÁºìÂ≠òÔºâ`);\r\n    return;\r\n  }\r\n\r\n  const startTime = performance.now();\r\n\r\n  if (!fogEnabled.value) {\r\n    if (fogSprite && fogLayer.children.includes(fogSprite)) {\r\n      fogLayer.removeChild(fogSprite);\r\n      fogSprite.destroy();\r\n      fogSprite = null;\r\n    }\r\n    fogNeedsUpdate = false;\r\n    return;\r\n  }\r\n\r\n  const tokens = props.tokens || props.mapData.tokens || [];\r\n  const ctx = fogCanvas.getContext('2d');\r\n  if (!ctx) return;\r\n\r\n  ctx.clearRect(0, 0, fogCanvas.width, fogCanvas.height);\r\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\r\n  ctx.fillRect(0, 0, fogCanvas.width, fogCanvas.height);\r\n  ctx.globalCompositeOperation = 'destination-out';\r\n\r\n  for (const token of tokens) {\r\n    if (token.vision <= 0) continue;\r\n\r\n    const visionPolygon = createVisionPolygon(token);\r\n\r\n    if (visionPolygon.length > 0) {\r\n      console.log(`üîç Token \"${token.name}\" ‰ΩçÁΩÆ: (${Math.floor(token.x)}, ${Math.floor(token.y)})`);\r\n      console.log(`  ËßÜÈáéÂ§öËæπÂΩ¢È°∂ÁÇπÊï∞: ${visionPolygon.length / 2}`);\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(visionPolygon[0], visionPolygon[1]);\r\n      for (let i = 2; i < visionPolygon.length; i += 2) {\r\n        ctx.lineTo(visionPolygon[i], visionPolygon[i + 1]);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 1)';\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  ctx.globalCompositeOperation = 'source-over';\r\n\r\n  if (fogSprite && fogLayer.children.includes(fogSprite)) {\r\n    fogLayer.removeChild(fogSprite);\r\n    fogSprite.destroy();\r\n    fogSprite = null;\r\n  }\r\n\r\n  if (fogTexture) {\r\n    fogTexture.destroy(true);\r\n    fogTexture = null;\r\n  }\r\n\r\n  fogTexture = PIXI.Texture.from(fogCanvas);\r\n  fogSprite = new PIXI.Sprite(fogTexture);\r\n  fogLayer.addChild(fogSprite);\r\n\r\n  const endTime = performance.now();\r\n  console.log(`üëÅÔ∏è Êõ¥Êñ∞Êàò‰∫âËø∑ÈõæÂÆåÊàêÔºåËÄóÊó∂: ${(endTime - startTime).toFixed(2)}ms`);\r\n\r\n  fogNeedsUpdate = false;\r\n}\r\n\r\nfunction createVisionPolygon(token: Token): number[] {\r\n  const visionRange = token.vision * props.mapData.grid;\r\n  if (visionRange <= 0) return [];\r\n\r\n  const gridX = Math.round(token.x / 10) * 10;\r\n  const gridY = Math.round(token.y / 10) * 10;\r\n  const cacheKey = `${token.id}-${gridX}-${gridY}`;\r\n\r\n  const keyAngles = getKeyAngles(token.x, token.y, visionRange, props.mapData.walls, mapBounds.value);\r\n\r\n  console.log(`üîç Token \"${token.name}\" ÂÖ≥ÈîÆËßíÂ∫¶: ${keyAngles.length}‰∏™`);\r\n\r\n  const points: Array<{ angle: number; x: number; y: number; dist: number }> = [];\r\n\r\n  for (const angle of keyAngles) {\r\n    const ray = castRay(token.x, token.y, angle, visionRange, props.mapData.walls);\r\n    points.push({ angle, ...ray });\r\n  }\r\n\r\n  points.sort((a, b) => a.angle - b.angle);\r\n\r\n  const polygon: number[] = [];\r\n  let lastX: number | null = null;\r\n  let lastY: number | null = null;\r\n\r\n  for (const point of points) {\r\n    if (lastX !== null && lastY !== null) {\r\n      const dx = point.x - lastX;\r\n      const dy = point.y - lastY;\r\n      const dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (dist < 1) {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    polygon.push(point.x, point.y);\r\n    lastX = point.x;\r\n    lastY = point.y;\r\n  }\r\n\r\n  if (visionPolygonCache.size > 100) {\r\n    const firstKey = visionPolygonCache.keys().next().value;\r\n    visionPolygonCache.delete(firstKey);\r\n  }\r\n  visionPolygonCache.set(cacheKey, polygon);\r\n\r\n  console.log(`  üìä ÊäïÂ∞Ñ‰∫Ü ${keyAngles.length} Êù°ÂÖâÁ∫ø`);\r\n\r\n  return polygon;\r\n}\r\n\r\nfunction castRay(\r\n  startX: number,\r\n  startY: number,\r\n  angle: number,\r\n  maxDistance: number,\r\n  walls: Wall[],\r\n): { x: number; y: number; dist: number } {\r\n  const result = castRayFromFOV(startX, startY, angle, maxDistance, walls, mapBounds.value);\r\n  const dist = Math.sqrt((result.x - startX) ** 2 + (result.y - startY) ** 2);\r\n  return { ...result, dist };\r\n}\r\n\r\n// üÜï ÂàáÊç¢Èó®ÁöÑÂºÄÂÖ≥Áä∂ÊÄÅ\r\nfunction toggleDoor(door: Wall) {\r\n  door.ds = door.ds === 1 ? 0 : 1;\r\n\r\n  console.log(`üö™ Èó®Áä∂ÊÄÅÂàáÊç¢: ${door.ds === 1 ? 'ÂºÄÈó®' : 'ÂÖ≥Èó®'}`, door.c);\r\n\r\n  drawWalls();\r\n\r\n  if (fogEnabled.value) {\r\n    visionPolygonCache.clear();\r\n    fogNeedsUpdate = true;\r\n    updateFog();\r\n  }\r\n\r\n  toastr.info(door.ds === 1 ? 'üîì Èó®Â∑≤ÊâìÂºÄ' : 'üîí Èó®Â∑≤ÂÖ≥Èó≠');\r\n}\r\n\r\n// üÜï ÂÖ®ÈÉ®ÂºÄÈó®\r\nfunction openAllDoors() {\r\n  let count = 0;\r\n  for (const door of doors.value) {\r\n    if (door.ds !== 1) {\r\n      door.ds = 1;\r\n      count++;\r\n    }\r\n  }\r\n\r\n  if (count > 0) {\r\n    console.log(`üîì ÊâìÂºÄ‰∫Ü ${count} ÈÅìÈó®`);\r\n    drawWalls();\r\n\r\n    if (fogEnabled.value) {\r\n      visionPolygonCache.clear();\r\n      fogNeedsUpdate = true;\r\n      updateFog();\r\n    }\r\n\r\n    toastr.success(`üîì Â∑≤ÊâìÂºÄ ${count} ÈÅìÈó®`);\r\n  } else {\r\n    toastr.info('ÊâÄÊúâÈó®ÈÉΩÂ∑≤ÁªèÊòØÂºÄÂêØÁä∂ÊÄÅ');\r\n  }\r\n}\r\n\r\n// üÜï ÂÖ®ÈÉ®ÂÖ≥Èó®\r\nfunction closeAllDoors() {\r\n  let count = 0;\r\n  for (const door of doors.value) {\r\n    if (door.ds !== 0) {\r\n      door.ds = 0;\r\n      count++;\r\n    }\r\n  }\r\n\r\n  if (count > 0) {\r\n    console.log(`üîí ÂÖ≥Èó≠‰∫Ü ${count} ÈÅìÈó®`);\r\n    drawWalls();\r\n\r\n    if (fogEnabled.value) {\r\n      visionPolygonCache.clear();\r\n      fogNeedsUpdate = true;\r\n      updateFog();\r\n    }\r\n\r\n    toastr.success(`üîí Â∑≤ÂÖ≥Èó≠ ${count} ÈÅìÈó®`);\r\n  } else {\r\n    toastr.info('ÊâÄÊúâÈó®ÈÉΩÂ∑≤ÁªèÊòØÂÖ≥Èó≠Áä∂ÊÄÅ');\r\n  }\r\n}\r\n\r\nfunction autoFitMap() {\r\n  if (!app || !containerRef.value) return;\r\n\r\n  const containerWidth = containerRef.value.clientWidth;\r\n  const containerHeight = containerRef.value.clientHeight;\r\n  const mapWidth = props.mapData.width;\r\n  const mapHeight = props.mapData.height;\r\n\r\n  const scaleX = (containerWidth * 0.9) / mapWidth;\r\n  const scaleY = (containerHeight * 0.9) / mapHeight;\r\n  const scale = Math.min(scaleX, scaleY);\r\n\r\n  viewport.value.scale = scale;\r\n  app.stage.scale.set(scale);\r\n\r\n  const scaledWidth = mapWidth * scale;\r\n  const scaledHeight = mapHeight * scale;\r\n  app.stage.x = (containerWidth - scaledWidth) / 2;\r\n  app.stage.y = (containerHeight - scaledHeight) / 2;\r\n\r\n  console.log(\r\n    `üó∫Ô∏è Âú∞ÂõæÂ∑≤Ëá™Âä®Áº©Êîæ: ${(scale * 100).toFixed(1)}% (${mapWidth}x${mapHeight} ‚Üí ${Math.round(scaledWidth)}x${Math.round(scaledHeight)})`,\r\n  );\r\n}\r\n\r\nfunction setupInteraction() {\r\n  if (!app) return;\r\n\r\n  let dragging = false;\r\n  let lastPos = { x: 0, y: 0 };\r\n\r\n  app.stage.eventMode = 'static';\r\n\r\n  window.addEventListener('keydown', event => {\r\n    if (event.code === 'Space' && !isSpaceKeyPressed) {\r\n      isSpaceKeyPressed = true;\r\n      if (canvasRef.value) {\r\n        canvasRef.value.style.cursor = 'grab';\r\n      }\r\n    }\r\n  });\r\n\r\n  window.addEventListener('keyup', event => {\r\n    if (event.code === 'Space') {\r\n      isSpaceKeyPressed = false;\r\n      if (canvasRef.value && !dragging) {\r\n        canvasRef.value.style.cursor = 'default';\r\n      }\r\n    }\r\n  });\r\n\r\n  app.stage.on('pointerdown', event => {\r\n    const canDragMap = isSpaceKeyPressed || (event.target === app?.stage && !isAnyTokenDragging);\r\n\r\n    if (canDragMap) {\r\n      dragging = true;\r\n      lastPos = { x: event.globalX, y: event.globalY };\r\n      if (canvasRef.value) {\r\n        canvasRef.value.style.cursor = 'grabbing';\r\n      }\r\n    }\r\n  });\r\n\r\n  app.stage.on('pointerup', () => {\r\n    if (dragging) {\r\n      dragging = false;\r\n      if (canvasRef.value) {\r\n        canvasRef.value.style.cursor = isSpaceKeyPressed ? 'grab' : 'default';\r\n      }\r\n    }\r\n  });\r\n\r\n  app.stage.on('pointermove', event => {\r\n    if (isAnyTokenDragging && !isSpaceKeyPressed) {\r\n      return;\r\n    }\r\n\r\n    if (dragging) {\r\n      const dx = event.globalX - lastPos.x;\r\n      const dy = event.globalY - lastPos.y;\r\n\r\n      app!.stage.x += dx;\r\n      app!.stage.y += dy;\r\n\r\n      lastPos = { x: event.globalX, y: event.globalY };\r\n    }\r\n  });\r\n\r\n  canvasRef.value?.addEventListener('wheel', event => {\r\n    event.preventDefault();\r\n\r\n    const zoomFactor = event.deltaY > 0 ? 0.9 : 1.1;\r\n    const newScale = viewport.value.scale * zoomFactor;\r\n\r\n    if (newScale >= 0.1 && newScale <= 5) {\r\n      viewport.value.scale = newScale;\r\n\r\n      gsap.to(app!.stage.scale, {\r\n        x: newScale,\r\n        y: newScale,\r\n        duration: 0.2,\r\n        ease: 'power2.out',\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction zoomIn() {\r\n  viewport.value.scale *= 1.2;\r\n  gsap.to(app!.stage.scale, {\r\n    x: viewport.value.scale,\r\n    y: viewport.value.scale,\r\n    duration: 0.3,\r\n  });\r\n}\r\n\r\nfunction zoomOut() {\r\n  viewport.value.scale *= 0.8;\r\n  gsap.to(app!.stage.scale, {\r\n    x: viewport.value.scale,\r\n    y: viewport.value.scale,\r\n    duration: 0.3,\r\n  });\r\n}\r\n\r\nfunction resetView() {\r\n  autoFitMap();\r\n}\r\n\r\nfunction toggleGrid() {\r\n  showGrid.value = !showGrid.value;\r\n  drawGrid();\r\n}\r\n\r\nfunction toggleFog() {\r\n  fogEnabled.value = !fogEnabled.value;\r\n  fogNeedsUpdate = true;\r\n  updateFog();\r\n}\r\n\r\nfunction toggleLighting() {\r\n  lightingEnabled.value = !lightingEnabled.value;\r\n  drawLights();\r\n}\r\n\r\nfunction toggleForeground() {\r\n  foregroundVisible.value = !foregroundVisible.value;\r\n  if (foregroundSprite) {\r\n    foregroundSprite.visible = foregroundVisible.value;\r\n  }\r\n}\r\n\r\nwatch(\r\n  () => props.tokens,\r\n  () => {\r\n    if (!isAnyTokenDragging) {\r\n      drawTokens();\r\n      if (fogEnabled.value) {\r\n        fogNeedsUpdate = true;\r\n        updateFog();\r\n      }\r\n    }\r\n  },\r\n  { deep: true },\r\n);\r\n\r\nonUnmounted(() => {\r\n  if (fogTexture) {\r\n    fogTexture.destroy(true);\r\n  }\r\n  if (fogSprite) {\r\n    fogSprite.destroy();\r\n  }\r\n  app?.destroy(true);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.map-canvas-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  background: #1a1a1a;\r\n}\r\n\r\ncanvas {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.map-controls {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  z-index: 10;\r\n}\r\n\r\n.map-controls button {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: none;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.map-controls button:hover {\r\n  background: rgba(0, 0, 0, 0.9);\r\n}\r\n\r\n/* üÜï Èó®ÊéßÂà∂Èù¢ÊùøÊ†∑Âºè */\r\n.door-panel {\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 10px;\r\n  width: 320px;\r\n  max-height: 500px;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  border: 1px solid #333;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 100;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.door-panel .panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  background: rgba(139, 69, 19, 0.3);\r\n  border-bottom: 1px solid #333;\r\n}\r\n\r\n.door-panel .panel-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  color: white;\r\n}\r\n\r\n.door-panel .panel-header button {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  width: auto;\r\n  height: auto;\r\n}\r\n\r\n.door-panel .panel-header button:hover {\r\n  color: #ff6b6b;\r\n}\r\n\r\n.door-panel .panel-content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n}\r\n\r\n/* ÊâπÈáèÊìç‰ΩúÊåâÈíÆ */\r\n.panel-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.batch-btn {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.batch-btn:first-child {\r\n  background: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.batch-btn:first-child:hover {\r\n  background: #45a049;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.batch-btn:last-child {\r\n  background: #f44336;\r\n  color: white;\r\n}\r\n\r\n.batch-btn:last-child:hover {\r\n  background: #da190b;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.door-item {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  padding: 12px;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.door-item:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.door-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.door-name {\r\n  font-weight: bold;\r\n  color: white;\r\n  font-size: 14px;\r\n}\r\n\r\n.door-position {\r\n  font-size: 12px;\r\n  color: #aaa;\r\n}\r\n\r\n.door-toggle {\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: all 0.2s;\r\n  min-width: 90px;\r\n}\r\n\r\n.door-toggle.open {\r\n  background: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.door-toggle.open:hover {\r\n  background: #45a049;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.door-toggle.closed {\r\n  background: #f44336;\r\n  color: white;\r\n}\r\n\r\n.door-toggle.closed:hover {\r\n  background: #da190b;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.token-info {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  min-width: 200px;\r\n  z-index: 10;\r\n}\r\n\r\n.token-info h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.token-info p {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.token-info button {\r\n  margin-top: 10px;\r\n  padding: 5px 10px;\r\n  background: #4caf50;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.token-info button:hover {\r\n  background: #45a049;\r\n}\r\n</style>\r\n\r\n","<template>\n  <div class=\"vtt-viewer\">\n    <div v-if=\"loading\" class=\"loading\">\n      <div class=\"spinner\"></div>\n      <p>Âä†ËΩΩÂú∞Âõæ‰∏≠...</p>\n    </div>\n\n    <div v-else-if=\"error\" class=\"error\">\n      <h2>‚ùå Âä†ËΩΩÂ§±Ë¥•</h2>\n      <pre>{{ error }}</pre>\n      <div class=\"error-actions\">\n        <button @click=\"loadMap\">ÈáçËØï</button>\n        <button @click=\"showUploadDialog = true\">üìÅ ‰∏ä‰º†Âú∞Âõæ JSON</button>\n        <button @click=\"loadExampleMap\">üé≤ Âä†ËΩΩÁ§∫‰æãÂú∞Âõæ</button>\n      </div>\n    </div>\n\n    <!-- ‰∏ä‰º†ÂØπËØùÊ°Ü -->\n    <div v-if=\"showUploadDialog\" class=\"upload-dialog\">\n      <div class=\"upload-content\">\n        <h3>‰∏ä‰º†Âú∞Âõæ JSON Êñá‰ª∂</h3>\n        <input type=\"file\" accept=\".json\" @change=\"handleFileUpload\" />\n        <p class=\"upload-hint\">ÊàñÁ≤òË¥¥ JSON ÂÜÖÂÆπ:</p>\n        <textarea v-model=\"jsonInput\" placeholder=\"Á≤òË¥¥ VTT Âú∞Âõæ JSON...\" rows=\"10\"></textarea>\n        <div class=\"upload-actions\">\n          <button @click=\"loadFromJSON\">Âä†ËΩΩ</button>\n          <button @click=\"showUploadDialog = false\">ÂèñÊ∂à</button>\n        </div>\n      </div>\n    </div>\n\n    <template v-else-if=\"mapData\">\n      <!-- È°∂ÈÉ®Â∑•ÂÖ∑Ê†è -->\n      <div class=\"toolbar\">\n        <h2>{{ mapData.name }}</h2>\n        <div class=\"toolbar-actions\">\n          <button @click=\"showTokenManager = !showTokenManager\">üé≠ Token ÁÆ°ÁêÜ</button>\n          <button @click=\"showMapInfo = !showMapInfo\">‚ÑπÔ∏è Âú∞Âõæ‰ø°ÊÅØ</button>\n          <button @click=\"exportState\">üíæ ÂØºÂá∫Áä∂ÊÄÅ</button>\n          <button @click=\"importState\">üìÅ ÂØºÂÖ•Áä∂ÊÄÅ</button>\n        </div>\n      </div>\n\n      <!-- Âú∞ÂõæÁîªÂ∏É -->\n      <div class=\"map-wrapper\">\n        <MapCanvas\n          :map-data=\"mapData\"\n          :tokens=\"currentTokens\"\n          @token-move=\"handleTokenMove\"\n          @token-select=\"handleTokenSelect\"\n        />\n      </div>\n\n      <!-- Token ÁÆ°ÁêÜÈù¢Êùø -->\n      <div v-if=\"showTokenManager\" class=\"side-panel token-manager\">\n        <div class=\"panel-header\">\n          <h3>Token ÁÆ°ÁêÜ</h3>\n          <button @click=\"showTokenManager = false\">‚úñ</button>\n        </div>\n\n        <div class=\"panel-content\">\n          <button @click=\"addNewToken\" class=\"add-token-btn\">‚ûï Ê∑ªÂä† Token</button>\n\n          <div v-for=\"token in currentTokens\" :key=\"token.id\" class=\"token-item\">\n            <div class=\"token-header\">\n              <strong>{{ token.name }}</strong>\n              <button @click=\"removeToken(token.id)\" class=\"delete-btn\">üóëÔ∏è</button>\n            </div>\n            <div class=\"token-details\">\n              <label>\n                ÂêçÁß∞:\n                <input v-model=\"token.name\" type=\"text\" />\n              </label>\n              <label> X: <input v-model.number=\"token.x\" type=\"number\" step=\"10\" /> </label>\n              <label> Y: <input v-model.number=\"token.y\" type=\"number\" step=\"10\" /> </label>\n              <label>\n                ËßÜÈáéËåÉÂõ¥:\n                <input v-model.number=\"token.vision\" type=\"number\" min=\"0\" max=\"100\" />\n              </label>\n              <label>\n                Â∞∫ÂØ∏:\n                <input v-model.number=\"token.width\" type=\"number\" min=\"1\" max=\"10\" />\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Âú∞Âõæ‰ø°ÊÅØÈù¢Êùø -->\n      <div v-if=\"showMapInfo\" class=\"side-panel map-info\">\n        <div class=\"panel-header\">\n          <h3>Âú∞Âõæ‰ø°ÊÅØ</h3>\n          <button @click=\"showMapInfo = false\">‚úñ</button>\n        </div>\n\n        <div class=\"panel-content\">\n          <div class=\"info-item\">\n            <label>Âú∞ÂõæÂêçÁß∞:</label>\n            <span>{{ mapData.name }}</span>\n          </div>\n          <div class=\"info-item\">\n            <label>Â∞∫ÂØ∏:</label>\n            <span>{{ mapData.width }} √ó {{ mapData.height }} px</span>\n          </div>\n          <div class=\"info-item\">\n            <label>ÁΩëÊ†º:</label>\n            <span>{{ mapData.grid }} px ({{ mapData.gridDistance }} {{ mapData.gridUnits }})</span>\n          </div>\n          <div class=\"info-item\">\n            <label>ÂÖâÊ∫êÊï∞Èáè:</label>\n            <span>{{ mapData.lights.length }}</span>\n          </div>\n          <div class=\"info-item\">\n            <label>Â¢ôÂ£ÅÊï∞Èáè:</label>\n            <span>{{ mapData.walls.length }}</span>\n          </div>\n          <div class=\"info-item\">\n            <label>ÂÖ®Â±ÄÂÖâÁÖß:</label>\n            <span>{{ mapData.globalLight ? 'ÊòØ' : 'Âê¶' }}</span>\n          </div>\n          <div class=\"info-item\">\n            <label>ÈªëÊöóÁ≠âÁ∫ß:</label>\n            <span>{{ (mapData.darkness * 100).toFixed(0) }}%</span>\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue';\n// import MapCanvas from './components/MapCanvas.vue'; // V1\n// import MapCanvas from './components/MapCanvas-V2.vue'; // V2 - ÊúâÈóÆÈ¢ò,ÊöÇÊó∂‰∏çÁî®\n// import MapCanvas from './components/MapCanvas-V3.vue'; // V3 - ‰ΩøÁî®Canvas 2D destination-outÊñπÊ≥ïÔºàÂÆåÁæéÁâà-Â§á‰ªΩÔºâ\nimport MapCanvas from './components/MapCanvas-V4.vue'; // V4 - V3Âü∫Á°Ä‰∏ä + Èó®ÊéßÂà∂Á≥ªÁªü\nimport { useMapState } from './composables/useMapState';\nimport { TokenSchema, VTTMapSchema, type Token, type VTTMap } from './types';\n\nconst loading = ref(true);\nconst error = ref<string | null>(null);\nconst mapData = ref<VTTMap | null>(null);\nconst showTokenManager = ref(false);\nconst showMapInfo = ref(false);\nconst showUploadDialog = ref(false);\nconst jsonInput = ref('');\n\n// Âú∞ÂõæÁä∂ÊÄÅÁÆ°ÁêÜ\nconst mapStateManager = ref<ReturnType<typeof useMapState> | null>(null);\n\nconst currentTokens = computed(() => {\n  const mapTokens = mapData.value?.tokens || [];\n  const stateTokens = mapStateManager.value?.state?.value?.tokens || [];\n\n  console.log(`üîç currentTokens ËÆ°ÁÆó:`);\n  console.log(`  - mapData.tokens: ${mapTokens.length} ‰∏™`);\n  console.log(`  - mapStateManager.tokens: ${stateTokens.length} ‰∏™`);\n  console.log(`  - mapStateManager Â≠òÂú®: ${!!mapStateManager.value}`);\n\n  if (!mapStateManager.value) {\n    console.log(`  ‚úÖ ËøîÂõû mapData.tokens (${mapTokens.length} ‰∏™)`);\n    return mapTokens;\n  }\n\n  const result = stateTokens.length > 0 ? stateTokens : mapTokens;\n  console.log(`  ‚úÖ ËøîÂõû: ${result.length} ‰∏™ Token`);\n  return result;\n});\n\n// Âä†ËΩΩÁ§∫‰æãÂú∞Âõæ\nfunction loadExampleMap() {\n  const exampleMap = {\n    name: 'Á§∫‰æãÂú∞Âõæ',\n    width: 3000,\n    height: 2000,\n    grid: 100,\n    gridDistance: 5,\n    gridUnits: 'ft',\n    backgroundColor: '#1a1a1a',\n    globalLight: false,\n    darkness: 0.5,\n    img: null,\n    foreground: null,\n    lights: [\n      { x: 500, y: 500, dim: 8, bright: 4, tintColor: '#ffaa00', tintAlpha: 0.5 },\n      { x: 1500, y: 1000, dim: 10, bright: 5, tintColor: '#ffffff', tintAlpha: 0.8 },\n    ],\n    walls: [\n      { c: [0, 0, 3000, 0], move: 1, sense: 1, sound: 1, door: 0 },\n      { c: [3000, 0, 3000, 2000], move: 1, sense: 1, sound: 1, door: 0 },\n      { c: [3000, 2000, 0, 2000], move: 1, sense: 1, sound: 1, door: 0 },\n      { c: [0, 2000, 0, 0], move: 1, sense: 1, sound: 1, door: 0 },\n    ],\n    tokens: [{ id: 'token1', name: 'Áé©ÂÆ∂', x: 500, y: 500, width: 1, vision: 12 }],\n    fogOfWar: { enabled: false },\n  };\n\n  try {\n    const parsed = VTTMapSchema.parse(exampleMap);\n    mapData.value = parsed;\n    mapStateManager.value = useMapState(parsed.name);\n\n    // ÂÆâÂÖ®Âú∞Ê£ÄÊü•Âπ∂Ê∑ªÂä† tokensÔºàÊ∑ªÂä†Êõ¥Â§öÁ©∫ÂÄºÊ£ÄÊü•Ôºâ\n    if (\n      mapStateManager.value?.state?.value?.tokens &&\n      mapStateManager.value.state.value.tokens.length === 0 &&\n      parsed.tokens &&\n      parsed.tokens.length > 0\n    ) {\n      parsed.tokens.forEach(token => mapStateManager.value?.addToken(token));\n    }\n\n    error.value = null;\n    loading.value = false;\n    showUploadDialog.value = false;\n    toastr.success(`Á§∫‰æãÂú∞ÂõæÂä†ËΩΩÊàêÂäü`);\n  } catch (e) {\n    error.value = e instanceof Error ? e.message : String(e);\n    toastr.error('Á§∫‰æãÂú∞ÂõæÂä†ËΩΩÂ§±Ë¥•: ' + error.value);\n  }\n}\n\n// Â§ÑÁêÜÊñá‰ª∂‰∏ä‰º†\nfunction handleFileUpload(event: Event) {\n  const file = (event.target as HTMLInputElement).files?.[0];\n  if (!file) return;\n\n  const reader = new FileReader();\n  reader.onload = e => {\n    jsonInput.value = e.target?.result as string;\n    // üîß ÂÖ≥ÈîÆ‰øÆÂ§çÔºöÊñá‰ª∂‰∏ä‰º†ÂêéËá™Âä®Âä†ËΩΩ\n    console.log(`üìÅ Êñá‰ª∂Â∑≤‰∏ä‰º†: ${file.name} (${file.size} Â≠óËäÇ)`);\n    loadFromJSON();\n  };\n  reader.readAsText(file);\n}\n\n// ‰ªé JSON Âä†ËΩΩ\nfunction loadFromJSON() {\n  try {\n    console.log('ÂºÄÂßãËß£Êûê JSON...');\n    const data = JSON.parse(jsonInput.value);\n    console.log('JSON Ëß£ÊûêÊàêÂäüÔºåÊï∞ÊçÆ:', data);\n\n    console.log('ÂºÄÂßã Zod È™åËØÅ...');\n    const parsed = VTTMapSchema.parse(data);\n    console.log('Zod È™åËØÅÊàêÂäü');\n\n    mapData.value = parsed;\n\n    console.log(`üìä Âú∞ÂõæÊï∞ÊçÆ: ${parsed.tokens?.length || 0} ‰∏™ Token`);\n\n    // üîß ÂÖ≥ÈîÆ‰øÆÂ§çÔºöÈáçÊñ∞Âä†ËΩΩÊó∂ÔºåÂÖàÊ∏ÖÈô§ÊóßÁöÑÁä∂ÊÄÅÁÆ°ÁêÜÂô®\n    // Ê∏ÖÈô§ÊóßÁöÑÂú∞ÂõæÁä∂ÊÄÅ\n    const mapKey = `vtt_map_${parsed.name}`;\n    const chatVars = getVariables({ type: 'chat' });\n    if (chatVars[mapKey]) {\n      console.log(`üóëÔ∏è Ê∏ÖÈô§ÊóßÁöÑÂú∞ÂõæÁä∂ÊÄÅ: ${mapKey}`);\n      delete chatVars[mapKey];\n      replaceVariables(chatVars, { type: 'chat' });\n    }\n\n    // ÈáçÊñ∞ÂàõÂª∫Áä∂ÊÄÅÁÆ°ÁêÜÂô®ÔºàÁé∞Âú®‰ºö‰ªéÁ©∫Áä∂ÊÄÅÂºÄÂßãÔºâ\n    mapStateManager.value = useMapState(parsed.name);\n\n    console.log(`üìä Áä∂ÊÄÅÁÆ°ÁêÜÂô®: ${mapStateManager.value?.state?.value?.tokens?.length || 0} ‰∏™ Token`);\n\n    // Ê∑ªÂä† Token Âà∞Áä∂ÊÄÅÁÆ°ÁêÜÂô®\n    if (parsed.tokens && parsed.tokens.length > 0) {\n      console.log(`‚úÖ Ê∑ªÂä† ${parsed.tokens.length} ‰∏™ Token Âà∞Áä∂ÊÄÅÁÆ°ÁêÜÂô®`);\n      parsed.tokens.forEach(token => {\n        mapStateManager.value?.addToken(token);\n        console.log(`  - Ê∑ªÂä† Token: ${token.name} (${token.x}, ${token.y})`);\n      });\n    } else {\n      console.log(`‚ö†Ô∏è Âú∞ÂõæÊï∞ÊçÆ‰∏≠Ê≤°Êúâ Token`);\n    }\n\n    // ‰øùÂ≠òÂà∞ localStorage\n    const variables = getVariables({ type: 'script', script_id: getScriptId() });\n    variables.vtt_map_data = parsed;\n    replaceVariables(variables, { type: 'script', script_id: getScriptId() });\n\n    error.value = null;\n    loading.value = false;\n    showUploadDialog.value = false;\n    jsonInput.value = '';\n    toastr.success(`Âú∞Âõæ \"${parsed.name}\" Âä†ËΩΩÊàêÂäü`);\n  } catch (e) {\n    console.error('ËØ¶ÁªÜÈîôËØØ:', e);\n    if (e instanceof Error) {\n      console.error('ÈîôËØØÂ†ÜÊ†à:', e.stack);\n    }\n    toastr.error('JSON Ëß£ÊûêÂ§±Ë¥•: ' + (e instanceof Error ? e.message : String(e)));\n  }\n}\n\n// Âä†ËΩΩÂú∞ÂõæÊï∞ÊçÆ\nasync function loadMap() {\n  loading.value = true;\n  error.value = null;\n\n  try {\n    // ‰ªéÈÖíÈ¶ÜÂèòÈáèÂä†ËΩΩÂú∞ÂõæÈÖçÁΩÆ\n    const mapConfig = getVariables({ type: 'script', script_id: getScriptId() });\n\n    if (!mapConfig.vtt_map_url && !mapConfig.vtt_map_data) {\n      throw new Error('Êú™ÈÖçÁΩÆÂú∞ÂõæÊï∞ÊçÆ„ÄÇËØ∑Âú®ËÑöÊú¨ÂèòÈáè‰∏≠ËÆæÁΩÆ vtt_map_url Êàñ vtt_map_data');\n    }\n\n    let rawData: any;\n\n    // ‰ºòÂÖà‰ªé URL Âä†ËΩΩ\n    if (mapConfig.vtt_map_url) {\n      const response = await fetch(mapConfig.vtt_map_url);\n      rawData = await response.json();\n    } else {\n      rawData = mapConfig.vtt_map_data;\n    }\n\n    // È™åËØÅÂíåËß£ÊûêÊï∞ÊçÆ\n    const parsed = VTTMapSchema.parse(rawData);\n    mapData.value = parsed;\n\n    // ÂàùÂßãÂåñÂú∞ÂõæÁä∂ÊÄÅÁÆ°ÁêÜ\n    mapStateManager.value = useMapState(parsed.name);\n\n    // Â¶ÇÊûúÁä∂ÊÄÅ‰∏≠Ê≤°Êúâ Token,‰ΩøÁî®Âú∞Âõæ‰∏≠ÁöÑ TokenÔºàÊ∑ªÂä†Êõ¥Â§öÁ©∫ÂÄºÊ£ÄÊü•Ôºâ\n    if (\n      mapStateManager.value?.state?.value?.tokens &&\n      mapStateManager.value.state.value.tokens.length === 0 &&\n      parsed.tokens &&\n      parsed.tokens.length > 0\n    ) {\n      parsed.tokens.forEach(token => {\n        mapStateManager.value?.addToken(token);\n      });\n    }\n\n    toastr.success(`Âú∞Âõæ \"${parsed.name}\" Âä†ËΩΩÊàêÂäü`);\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : String(err);\n    toastr.error('Âú∞ÂõæÂä†ËΩΩÂ§±Ë¥•: ' + error.value);\n  } finally {\n    loading.value = false;\n  }\n}\n\n// Token Êìç‰Ωú\nfunction handleTokenMove(token: Token, x: number, y: number) {\n  mapStateManager.value?.updateTokenPosition(token.id, x, y);\n}\n\nfunction handleTokenSelect(token: Token | null) {\n  console.log('ÈÄâ‰∏≠ Token:', token);\n}\n\nfunction addNewToken() {\n  if (!mapStateManager.value?.addToken || !mapData.value) return;\n\n  const newToken = TokenSchema.parse({\n    id: `token_${Date.now()}`,\n    name: `Token ${currentTokens.value.length + 1}`,\n    x: mapData.value.width / 2,\n    y: mapData.value.height / 2,\n    width: 1,\n    height: 1,\n    vision: 12,\n  });\n\n  mapStateManager.value.addToken(newToken);\n  toastr.success(`Ê∑ªÂä†‰∫ÜÊñ∞ÁöÑ Token: ${newToken.name}`);\n}\n\nfunction removeToken(tokenId: string) {\n  if (!mapStateManager.value?.removeToken) return;\n\n  if (confirm('Á°ÆÂÆöË¶ÅÂà†Èô§Ëøô‰∏™ Token Âêó?')) {\n    mapStateManager.value.removeToken(tokenId);\n    toastr.success('Token Â∑≤Âà†Èô§');\n  }\n}\n\n// ÂØºÂá∫/ÂØºÂÖ•Áä∂ÊÄÅ\nfunction exportState() {\n  if (!mapStateManager.value?.state?.value) return;\n\n  const state = mapStateManager.value.state.value;\n  const json = JSON.stringify(state, null, 2);\n\n  // Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø\n  navigator.clipboard\n    .writeText(json)\n    .then(() => {\n      toastr.success('Áä∂ÊÄÅÂ∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø');\n    })\n    .catch(() => {\n      // ÈôçÁ∫ßÊñπÊ°à: ÊòæÁ§∫Âú®ÂºπÁ™ó‰∏≠\n      const blob = new Blob([json], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${mapData.value?.name}_state.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n    });\n}\n\nfunction importState() {\n  const json = prompt('ËØ∑Á≤òË¥¥Âú∞ÂõæÁä∂ÊÄÅ JSON:');\n  if (!json) return;\n\n  try {\n    const state = JSON.parse(json);\n    replaceVariables({ [`vtt_map_${mapData.value?.name}`]: state }, { type: 'chat' });\n\n    toastr.success('Áä∂ÊÄÅÂØºÂÖ•ÊàêÂäü,Ê≠£Âú®ÈáçÊñ∞Âä†ËΩΩ...');\n    setTimeout(() => location.reload(), 1000);\n  } catch (err) {\n    toastr.error('ÂØºÂÖ•Â§±Ë¥•: ' + (err instanceof Error ? err.message : String(err)));\n  }\n}\n\nonMounted(() => {\n  loadMap();\n});\n</script>\n\n<style scoped>\n.vtt-viewer {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: #1a1a1a;\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n.loading,\n.error {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  gap: 20px;\n}\n\n.spinner {\n  width: 50px;\n  height: 50px;\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-top-color: white;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.error pre {\n  background: rgba(255, 0, 0, 0.2);\n  padding: 15px;\n  border-radius: 5px;\n  max-width: 600px;\n}\n\n.error-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.error button {\n  padding: 10px 20px;\n  background: #4caf50;\n  border: none;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.error button:hover {\n  background: #66bb6a;\n}\n\n/* ‰∏ä‰º†ÂØπËØùÊ°Ü */\n.upload-dialog {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.upload-content {\n  background: #2a2a2a;\n  padding: 30px;\n  border-radius: 10px;\n  max-width: 600px;\n  width: 90%;\n}\n\n.upload-content h3 {\n  margin-top: 0;\n}\n\n.upload-content input[type='file'] {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  background: #1a1a1a;\n  border: 2px dashed #666;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n}\n\n.upload-hint {\n  margin: 20px 0 10px;\n  color: #aaa;\n}\n\n.upload-content textarea {\n  width: 100%;\n  padding: 10px;\n  background: #1a1a1a;\n  border: 1px solid #666;\n  border-radius: 5px;\n  color: white;\n  font-family: monospace;\n  resize: vertical;\n}\n\n.upload-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n  justify-content: flex-end;\n}\n\n.upload-actions button {\n  padding: 10px 20px;\n  background: #4caf50;\n  border: none;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.upload-actions button:last-child {\n  background: #666;\n}\n\n.upload-actions button:hover {\n  opacity: 0.8;\n}\n\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background: rgba(0, 0, 0, 0.8);\n  border-bottom: 2px solid #333;\n}\n\n.toolbar h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.toolbar-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.toolbar-actions button {\n  padding: 8px 15px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.toolbar-actions button:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.map-wrapper {\n  flex: 1;\n  position: relative;\n}\n\n.side-panel {\n  position: absolute;\n  top: 60px;\n  right: 10px;\n  width: 300px;\n  max-height: calc(100vh - 80px);\n  background: rgba(0, 0, 0, 0.9);\n  border: 1px solid #333;\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  z-index: 100;\n}\n\n.panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  background: rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid #333;\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 16px;\n}\n\n.panel-header button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.panel-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 15px;\n}\n\n.add-token-btn {\n  width: 100%;\n  padding: 10px;\n  background: #4caf50;\n  border: none;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 15px;\n}\n\n.token-item {\n  background: rgba(255, 255, 255, 0.05);\n  padding: 10px;\n  border-radius: 5px;\n  margin-bottom: 10px;\n}\n\n.token-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.delete-btn {\n  background: rgba(255, 0, 0, 0.3);\n  border: none;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\n.token-details {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.token-details label {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n}\n\n.token-details input {\n  width: 120px;\n  padding: 4px 8px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  border-radius: 3px;\n}\n\n.info-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.info-item label {\n  font-weight: bold;\n}\n</style>\n"],"names":[],"sourceRoot":""}